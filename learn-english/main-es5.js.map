{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/about-me/about-me.component.ts","webpack:///src/app/components/about-me/about-me.component.html","webpack:///src/app/components/dictionary/dictionary.component.ts","webpack:///src/app/components/dictionary/dictionary.component.html","webpack:///src/app/components/game/game.component.ts","webpack:///src/app/components/game/game.component.html","webpack:///src/app/components/game/service/audio.service.ts","webpack:///src/app/components/game/service/data-game.service.ts","webpack:///src/app/components/game/word.model.ts","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/locale service/missing-translation.service.ts.ts","webpack:///src/app/components/menu/menu.component.ts","webpack:///src/app/components/menu/menu.component.html","webpack:///src/app/components/not-found/not-found.component.ts","webpack:///src/app/components/not-found/not-found.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/profile/profile.model.ts","webpack:///src/app/components/profile/service/profile.service.ts","webpack:///src/app/components/translator/fullTranslator.model.ts","webpack:///src/app/components/translator/service/data.service.ts","webpack:///src/app/components/translator/translator.component.ts","webpack:///src/app/components/translator/translator.component.html","webpack:///src/app/store/action/dictionary.action.ts","webpack:///src/app/store/action/game.action.ts","webpack:///src/app/store/action/profile.actions.ts","webpack:///src/app/store/action/translate.action.ts","webpack:///src/app/store/effect/dictionary.effect.ts","webpack:///src/app/store/effect/game.effect.ts","webpack:///src/app/store/effect/profile.effects.ts","webpack:///src/app/store/effect/translate.effect.ts","webpack:///src/app/store/index.ts","webpack:///src/app/store/reducer/dictionary.reducer.ts","webpack:///src/app/store/reducer/game.reducer.ts","webpack:///src/app/store/reducer/profile.reducers.ts","webpack:///src/app/store/reducer/translate.reducer.ts","webpack:///src/app/store/selectors/dictionary.selectors.ts","webpack:///src/app/store/selectors/game.selectors.ts","webpack:///src/app/store/selectors/profile.selectors.ts","webpack:///src/app/store/selectors/translate.selectors.ts","webpack:///src/app/store/state/dictionary.state.ts","webpack:///src/app/store/state/game.state.ts","webpack:///src/app/store/state/profile.state.ts","webpack:///src/app/store/state/translate.state.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","translateService","_store$","dataGameServise","profileService","use","defaultLocale","dispatch","loadWordsHttp","selector","templateUrl","styleUrls","HttpLoaderFactory","http","AppModule","instrument","maxAge","logOnly","production","loader","provide","useFactory","deps","missingTranslationHandler","useClass","defaultLanguage","declarations","providers","bootstrap","AboutMeComponent","translate","addLangs","setDefaultLang","browserLang","getBrowserLang","match","DictionaryComponent","dataGameService","audioService","dictionary$","pipe","srcAudio$","displayedColumns","dataSource","spinnerButtonOptions","active","text","spinnerSize","raised","stroked","buttonColor","spinnerColor","fullWidth","disabled","mode","audio","Audio","word","src","dictionarySubscription","subscribe","data","paginator","srcAudioSubscription","play","isLoading","unsubscribe","GameComponent","router","gameStatus$","word$","answers$","randomRival$","User$","count","sec","resultDuration","correctAnswer","wrongAnswer","timeRound","arrayForDictionary","color","selectedAnswer","allAnswerRival","correctAnswerRival","wrongAnserRival","resultAllGame","showText","strokeWidth","diameter","loadAvatarHttp","getProfileFromLS","gameStatus","answer","index","russianWord","background","push","game","newLocal_1","valueProgressSpinner","valueSpinner","resultGameRival","resultGame","addWordsDictionary","pageName","navigate","minAnswerRival","Math","floor","random","totalPoints","totalPointRival","AudioService","_http","urlAPI","post","JSON","stringify","engine","voice","headers","items","get","DataGameService","_httpClient","url","words","numberOptionsAnswer","rand","length","randWord","gettingDataFromLocalStorage","localStorage","getItem","wordsforLearningLSKey","wordsStorageString","wordsStorage","parse","dataForLocalSrorageString","setItem","filter","value","result","find","dataForLocalSrorageConcat","concat","dataForLocalStorage","loadWordList","item","save","wordsForArrayAnswer","Set","add","size","randomRuWord","getRandomWord","newLocal","Array","from","sort","Word","englishWord","HomeComponent","goToGame","MissingTranslationService","params","key","currentLang","MenuComponent","dictionary","numberWordsInDictionary","dictionaryCount$","NotFoundComponent","window","history","back","ProfileComponent","_store","nickname","idAvatar","onSaved","profile","emit","Profile","ProfileService","baseURL","avatars","nicknameRival","userName","dataUser","dataUserLS","profileKeyLS","datafromStorage","foundElement","randNickname","FullTranslation","def","tr","map","DataService","mainAPIKey","urlForImg","lang","translation","parseTranslation","responseType","observe","TranslatorComponent","translator","wordTranslate$","error$","srcImg","getImg","link","includes","error","wordTranslate","changeLang","translateWord","onTitleChange","getWordsFromLS","setWordsFromLS","removeWordFromDictionary","changeWordStatus","getAudioSrc","setAudioSrc","setGameStatus","getNewQuestion","setNewQuestion","saveProfileUser","setProfileUser","getProfileUserFromLS","getRivalProfile","setRivalProfile","resultTranslate","DictionaryEffects","actions$","getWordsFromLS$","removeWord$","action","playAudio$","getAudio","location","GameEffects","getNewQuestion$","answers","getRandomAnswers","ProfileEffects","saveProfileUser$","saveProfile","getProfileUserFromLS$","getRivalProfile$","getRandomUser","TranslateEffects","dataService","translate$","message","reducer","dictionaryReducer","state","srcAudio","StateReducerDictionary","gameReducer","StateReducerGame","profileReducer","userProfile","rivalProfile","StateReducerProfile","translateReducer","StateReducerTranslate","selectStateDictionary","selectDictionary","selectDictionaryCount","selectSrcAudio","selectGameFeature","selectStatusGame","selectWord","selectAnswers","selectStateProfile","selectRivalProfile","selectUserProfile","selectStateTranslate","selectWordTranslate","selectError","featureKeyDictionary","initialState","featureKeyGame","featureKeyProfile","featureKeyTranslate","environment","locales","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { TranslatorComponent } from './components/translator/translator.component';\nimport { GameComponent } from './components/game/game.component';\nimport { DictionaryComponent } from './components/dictionary/dictionary.component';\nimport { AboutMeComponent } from './components/about-me/about-me.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: HomeComponent\n\t},\n\t{\n\t\tpath: 'translate',\n\t\tcomponent: TranslatorComponent,\n\t},\n\t{\n\t\tpath: 'game',\n\t\tcomponent: GameComponent,\n\t},\n\t{\n\t\tpath: 'dictionary',\n\t\tcomponent: DictionaryComponent,\n\t},\n\t{\n\t\tpath: 'about-me',\n\t\tcomponent: AboutMeComponent,\n\t},\n\t{\n\t\tpath: '**',\n\t\tcomponent: NotFoundComponent,\n\t},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { environment } from 'src/environments/environment';\nimport { Store } from '@ngrx/store';\nimport { DictionaryState } from './store/state/dictionary.state';\nimport { getWordsFromLS } from './store/action/dictionary.action';\nimport { DataGameService } from './components/game/service/data-game.service';\nimport { ProfileService } from './components/profile/service/profile.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n\tconstructor(private translateService: TranslateService,  private _store$: Store<DictionaryState>,\n\t\tprivate dataGameServise: DataGameService, private profileService: ProfileService) {}\n\tpublic ngOnInit(): void {\n\t  this.translateService.use(environment.defaultLocale);\n\t  this._store$.dispatch(getWordsFromLS({}));\n\t  this.dataGameServise.loadWordsHttp();\n\t}\n}\n","<div class=\"app\">\n\t<app-menu></app-menu>\n\t<router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GameComponent } from './components/game/game.component';\nimport { DataService } from './components/translator/service/data.service';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { reducer } from './store';\nimport { ProfileEffects } from './store/effect/profile.effects';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslatorComponent } from './components/translator/translator.component';\nimport { TranslateEffects } from './store/effect/translate.effect';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { DictionaryComponent } from './components/dictionary/dictionary.component';\nimport { DataGameService } from './components/game/service/data-game.service';\nimport { AboutMeComponent } from './components/about-me/about-me.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { AudioService } from './components/game/service/audio.service';\nimport { MenuComponent } from './components/menu/menu.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { TranslateModule, TranslateLoader, MissingTranslationHandler } from '@ngx-translate/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MissingTranslationService } from './components/locale service/missing-translation.service.ts';\nimport { MatProgressButtonsModule } from 'mat-progress-buttons';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ProfileService } from './components/profile/service/profile.service';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { DictionaryEffects } from './store/effect/dictionary.effect';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { GameEffects } from './store/effect/game.effect';\n\nexport function HttpLoaderFactory(http: HttpClient): TranslateLoader {\n\treturn new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent,\n\t\tGameComponent,\n\t\tTranslatorComponent,\n\t\tDictionaryComponent,\n\t\tAboutMeComponent,\n\t\tHomeComponent,\n\t\tNotFoundComponent,\n\t\tMenuComponent,\n\t\tProfileComponent,\n\t],\n\timports: [\n\t\tBrowserModule,\n\t\tAppRoutingModule,\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tHttpClientModule,\n\t\tStoreModule.forRoot(reducer),\n\t\tStoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n\t\tEffectsModule.forRoot([TranslateEffects, DictionaryEffects, ProfileEffects, GameEffects]),\n\t\tStoreRouterConnectingModule.forRoot(),\n\t\tBrowserAnimationsModule,\n\t\tMatProgressSpinnerModule,\n\t\tMatInputModule,\n\t\tMatIconModule,\n\t\tMatBadgeModule,\n\t\tTranslateModule.forRoot({\n\t\t\tloader: {\n\t\t\t\tprovide: TranslateLoader,\n\t\t\t\tuseFactory: HttpLoaderFactory,\n\t\t\t\tdeps: [HttpClient]\n\t\t\t},\n\t\t\tmissingTranslationHandler: {\n\t\t\t\tprovide: MissingTranslationHandler,\n\t\t\t\tuseClass: MissingTranslationService,\n\t\t\t},\n\t\t\tdefaultLanguage: 'ru',\n\t\t}),\n\t\tMatProgressButtonsModule,\n\t\tMatButtonToggleModule,\n\t\tMatButtonModule,\n\t\tMatTableModule,\n\t\tMatPaginatorModule,\n\t\tMatMenuModule\n\t],\n\tproviders: [DataService, DataGameService, AudioService, ProfileService],\n\tbootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-about-me',\n  templateUrl: './about-me.component.html',\n  styleUrls: ['./about-me.component.scss']\n})\nexport class AboutMeComponent {\n\n  constructor(private translate: TranslateService) {\n\ttranslate.addLangs(['en', 'ru']);\n\ttranslate.setDefaultLang('en');\n\tconst browserLang: any = translate.getBrowserLang();\n\ttranslate.use(browserLang.match(/en|ru/) ? browserLang : 'en');\n  }\n\n}\n","<div class=\"app-about-me\">\n\t<div class=\"app-about-me--container\">\n\t\t<p class=\"app-about-me--text\">{{'ABOUT-ME.ARTICLE' | translate}}</p>\n\t\t<p class=\"app-about-me--text\">{{'ABOUT-ME.TEXT' | translate}} Angular, Typescript, SCSS,  {{'ABOUT-ME.CONTINUE' | translate}} RxJS, NgRx.</p>\n\t\t<p class=\"app-about-me--text\">{{'ABOUT-ME.TOPIC' | translate}}</p>\n\t\t<div class=\"app-about-me--img\"><img src=\"./assets/img/59435.jpg\" alt=\"people\"></div>\n\t\t<p class=\"app-about-me--text\">{{'ABOUT-ME.ANSWER' | translate}}</p>\n\t</div>\n</div>","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { DataGameService } from '../game/service/data-game.service';\nimport { Word } from '../game/word.model';\nimport { AudioService } from '../game/service/audio.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatProgressButtonOptions } from 'mat-progress-buttons';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Store, select } from '@ngrx/store';\nimport { DictionaryState } from 'src/app/store/state/dictionary.state';\nimport { removeWordFromDictionary, changeWordStatus, getAudioSrc, setAudioSrc } from 'src/app/store/action/dictionary.action';\nimport { Observable, Subscription } from 'rxjs';\nimport { selectDictionary, selectSrcAudio } from 'src/app/store/selectors/dictionary.selectors';\nimport { Dictionary } from './dictionary.model';\n\n@Component({\n\tselector: 'app-dictionary',\n\ttemplateUrl: './dictionary.component.html',\n\tstyleUrls: ['./dictionary.component.scss']\n})\nexport class DictionaryComponent implements OnInit, OnDestroy {\n\tprivate dictionarySubscription: Subscription;\n\tprivate srcAudioSubscription: Subscription;\n\tpublic dictionary$: Observable<Word[]> = this._store$.pipe(select(selectDictionary));\n\tpublic srcAudio$: Observable<object> = this._store$.pipe(select(selectSrcAudio));\n\tpublic audio: HTMLAudioElement;\n\tpublic displayedColumns: string[] = ['index', 'englishWord', 'russianWord', 'listen', 'actions'];\n\tpublic dataSource: MatTableDataSource<Word> = new MatTableDataSource<Word>();\n\t@ViewChild(MatPaginator, { static: true }) public paginator: MatPaginator;\n\n\tpublic spinnerButtonOptions: MatProgressButtonOptions = {\n\t\tactive: false,\n\t\ttext: '🔈',\n\t\tspinnerSize: 18,\n\t\traised: true,\n\t\tstroked: false,\n\t\tbuttonColor: 'primary',\n\t\tspinnerColor: 'accent',\n\t\tfullWidth: false,\n\t\tdisabled: false,\n\t\tmode: 'indeterminate',\n\t};\n\n\tconstructor(public dataGameService: DataGameService, public audioService: AudioService,\n\t\tpublic translate: TranslateService, public _store$: Store<DictionaryState>) {\n\t\tthis.audio = new Audio();\n\t\ttranslate.addLangs(['en', 'ru']);\n\t\ttranslate.setDefaultLang('en');\n\t\tconst browserLang: any = translate.getBrowserLang();\n\t\ttranslate.use(browserLang.match(/en|ru/) ? browserLang : 'en');\n\t}\n\n\tpublic ngOnInit(): void {\n\t\tthis._store$.dispatch(setAudioSrc({ word: new Word(), src: '' }));\n\t\tthis.dictionarySubscription = this.dictionary$.subscribe((data: Word[]) => {\n\t\t\tthis.dataSource = new MatTableDataSource(data);\n\t\t\tthis.dataSource.paginator = this.paginator;\n\t\t});\n\n\t\tthis.srcAudioSubscription = this.srcAudio$.subscribe((data: Dictionary) => {\n\t\t\t// tslint:disable-next-line: strict-boolean-expressions\n\t\t\tif (!data.src) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.audio.src = data.src;\n\t\t\tthis.audio.play();\n\t\t\tthis.spinnerButtonOptions.active = false;\n\t\t\tthis._store$.dispatch(changeWordStatus({ word: data.word, isLoading: false }));\n\t\t});\n\t}\n\n\tpublic ngOnDestroy(): void {\n\t\tthis.dictionarySubscription.unsubscribe();\n\t\tthis.srcAudioSubscription.unsubscribe();\n\t}\n\n\tpublic removeWordFromDictionary(word: Word): void {\n\t\tthis._store$.dispatch(removeWordFromDictionary({ word }));\n\t}\n\n\tpublic playAudio(word: Word): void {\n\t\tthis.spinnerButtonOptions.active = true;\n\t\tthis._store$.dispatch(changeWordStatus({ word, isLoading: true }));\n\t\tthis._store$.dispatch(getAudioSrc({ word }));\n\t}\n\n\tpublic getSpinnerButtonOptions(word: Word): any {\n\t\treturn { ...this.spinnerButtonOptions, active: word.isLoading };\n\t}\n}\n","<div class=\"app-dictionary\">\n\n\t<div class=\"app-dictionary--container\">\n\t\t<div  class=\"{{dataSource.filteredData.length > 0 ? 'mat-elevation-z8':''}}\">\n\t\t\t<table *ngIf=\"dataSource.filteredData.length > 0\" mat-table [dataSource]=\"dataSource\">\n\t\t\t\t<ng-container matColumnDef=\"index\">\n\t\t\t\t\t<th mat-header-cell *matHeaderCellDef> N. </th>\n\t\t\t\t\t<td mat-cell *matCellDef=\"let element\" class=\"app-dictionary--index\">\n\t\t\t\t\t\t{{dataSource.filteredData.indexOf(element)+1}} </td>\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container matColumnDef=\"russianWord\">\n\t\t\t\t\t<th mat-header-cell *matHeaderCellDef>{{'DICTIONARY.TRANSLATION' | translate}}</th>\n\t\t\t\t\t<td mat-cell *matCellDef=\"let element\" class=\"app-dictionary--word\"> {{element.russianWord}} </td>\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container matColumnDef=\"englishWord\">\n\t\t\t\t\t<th mat-header-cell *matHeaderCellDef>{{'DICTIONARY.ENGLISH-WORD' | translate}}</th>\n\t\t\t\t\t<td mat-cell *matCellDef=\"let element\" class=\"app-dictionary--word\"> {{element.englishWord}} </td>\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container matColumnDef=\"listen\">\n\t\t\t\t\t<th mat-header-cell *matHeaderCellDef class=\"app-dictionary--sound\">\n\t\t\t\t\t\t{{'DICTIONARY.LISTEN' | translate}}\n\t\t\t\t\t</th>\n\t\t\t\t\t<td mat-cell *matCellDef=\"let word\" class=\"app-dictionary--sound\">\n\t\t\t\t\t\t<mat-spinner-button [options]=\"getSpinnerButtonOptions(word)\" (click)=\"playAudio(word)\"\n\t\t\t\t\t\t\tclass=\"app-dictionary--spinner-btn\">\n\t\t\t\t\t\t</mat-spinner-button>\n\t\t\t\t\t</td>\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container matColumnDef=\"actions\">\n\t\t\t\t\t<th mat-header-cell *matHeaderCellDef class=\"app-dictionary--remove\">\n\t\t\t\t\t\t{{'DICTIONARY.REMOVE' | translate}}\n\t\t\t\t\t</th>\n\t\t\t\t\t<td mat-cell *matCellDef=\"let word\" class=\"app-dictionary--remove\">\n\t\t\t\t\t\t<button mat-raised-button color=\"accent\" (click)=\"removeWordFromDictionary(word)\"\n\t\t\t\t\t\t\tclass=\"app-dictionary--remove-btn\">{{'DICTIONARY.BUTTON' | translate}}</button>\n\t\t\t\t\t</td>\n\t\t\t\t</ng-container>\n\n\t\t\t\t<tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n\t\t\t\t<tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\t\t\t</table>\n\t\t\t<div [hidden]=\"dataSource.filteredData.length === 0\">\n\t\t\t\t<mat-paginator  [pageSizeOptions]=\"[10, 20, 50, 100]\" showFirstLastButtons></mat-paginator>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div *ngIf=\"dataSource.filteredData.length === 0\" class=\"app-dictionary--warning\">\n\t\t\t\t{{'DICTIONARY.WARNING' | translate}}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { of, Observable, Subscription } from 'rxjs';\nimport { interval } from 'rxjs';\nimport { take, delay } from 'rxjs/operators';\nimport { Word } from './word.model';\nimport { ProgressSpinnerMode } from '@angular/material/progress-spinner';\nimport { DataGameService } from './service/data-game.service';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ProfileService } from '../profile/service/profile.service';\nimport { Profile } from '../profile/profile.model';\nimport { getWordsFromLS } from 'src/app/store/action/dictionary.action';\nimport { Store, select } from '@ngrx/store';\nimport { DictionaryState } from 'src/app/store/state/dictionary.state';\nimport { setGameStatus, getNewQuestion } from 'src/app/store/action/game.action';\nimport { selectStatusGame, selectWord, selectAnswers } from 'src/app/store/selectors/game.selectors';\nimport { getRivalProfile, getProfileUserFromLS } from 'src/app/store/action/profile.actions';\nimport { selectRivalProfile, selectUserProfile } from 'src/app/store/selectors/profile.selectors';\n\n@Component({\n\tselector: 'app-game',\n\ttemplateUrl: './game.component.html',\n\tstyleUrls: ['./game.component.scss']\n})\nexport class GameComponent implements OnInit {\n\tpublic gameStatus$: Observable<string> = this._store$.pipe(select(selectStatusGame));\n\tpublic word$: Observable<Word> = this._store$.pipe(select(selectWord));\n\tpublic answers$: Observable<string[]> = this._store$.pipe(select(selectAnswers));\n\tpublic randomRival$: Observable<Profile> = this._store$.pipe(select(selectRivalProfile));\n\tpublic User$: Observable<Profile> = this._store$.pipe(select(selectUserProfile));\n\n\tpublic count: number = null;\n\tpublic sec: number = 1000;\n\tpublic resultDuration: number = 200;\n\tpublic correctAnswer: number = 0;\n\tpublic wrongAnswer: number = 0;\n\tpublic timeRound: number = 30;\n\tpublic arrayForDictionary: Word[] = [];\n\tpublic color: object = {};\n\tpublic selectedAnswer: string = '';\n\tpublic allAnswerRival: number = 30;\n\tpublic correctAnswerRival: number = 0;\n\tpublic wrongAnserRival: number = 0;\n\tpublic resultAllGame: string = null;\n\n\tpublic mode: ProgressSpinnerMode = 'determinate';\n\tpublic valueProgressSpinner: number;\n\tpublic showText: number = this.count;\n\tpublic strokeWidth: number = 15;\n\tpublic diameter: number = 120;\n\n\tconstructor(public dataGameService: DataGameService, private router: Router, public translate: TranslateService,\n\t\tpublic profileService: ProfileService, private _store$: Store<DictionaryState>) {\n\t\ttranslate.addLangs(['en', 'ru']);\n\t\ttranslate.setDefaultLang('en');\n\t\tconst browserLang: any = translate.getBrowserLang();\n\t\ttranslate.use(browserLang.match(/en|ru/) ? browserLang : 'en');\n\t}\n\n\tpublic ngOnInit(): void {\n\t\tthis.profileService.loadAvatarHttp().subscribe(() => {\n\t\t\tthis._store$.dispatch(getProfileUserFromLS({}));\n\t\t\tthis._store$.dispatch(getRivalProfile({}));\n\t\t\tif (typeof this.profileService.getProfileFromLS().id === 'number') {\n\t\t\t\tthis._store$.dispatch(setGameStatus({ gameStatus: 'start' }));\n\t\t\t} else {\n\t\t\t\tthis._store$.dispatch(setGameStatus({ gameStatus: 'profile' }));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic game(): void {\n\t\tthis._store$.dispatch(setGameStatus({ gameStatus: 'game' }));\n\t\tthis._store$.dispatch(getNewQuestion({}));\n\t}\n\n\tpublic checkAnswer(answer: string, index: number): void {\n\t\tthis.word$.pipe(take(1))\n\t\t\t.subscribe((word: Word) => {\n\t\t\t\tif (answer === word.russianWord) {\n\t\t\t\t\tthis.selectedAnswer = 'true';\n\t\t\t\t\tthis.correctAnswer++;\n\t\t\t\t\tthis.color = {\n\t\t\t\t\t\t[index]: {\n\t\t\t\t\t\t\tbackground: 'green'\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedAnswer = 'false';\n\t\t\t\t\tthis.wrongAnswer++;\n\t\t\t\t\tthis.arrayForDictionary.push(word);\n\t\t\t\t\tthis.color = {\n\t\t\t\t\t\t[index]: {\n\t\t\t\t\t\t\tbackground: 'red'\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tof(this.color).pipe(delay(this.resultDuration)).subscribe(() => {\n\t\t\t\t\tthis.color = {};\n\t\t\t\t\tthis.selectedAnswer = '';\n\t\t\t\t});\n\t\t\t\tthis.game();\n\t\t\t});\n\t}\n\n\tpublic startTimer(): void {\n\t\tthis.correctAnswer = 0;\n\t\tthis.wrongAnswer = 0;\n\t\tthis.correctAnswerRival = 0;\n\t\tthis.wrongAnserRival = 0;\n\t\tthis.game();\n\t\tthis.count = this.timeRound;\n\t\tconst newLocal_1: number = 100;\n\t\tthis.valueProgressSpinner = newLocal_1;\n\t\tinterval(this.sec)\n\t\t\t.pipe(\n\t\t\t\ttake(this.timeRound)\n\t\t\t)\n\t\t\t.subscribe((count: number) => {\n\t\t\t\tcount = this.timeRound - (count + 1);\n\t\t\t\tthis.count = count;\n\t\t\t\tconst valueSpinner: number = 100;\n\t\t\t\tthis.valueProgressSpinner = valueSpinner / this.timeRound * count;\n\t\t\t\tif (this.count <= 0) {\n\t\t\t\t\tthis._store$.dispatch(setGameStatus({ gameStatus: 'complete' }));\n\t\t\t\t\tthis.count = null;\n\t\t\t\t\tthis.resultGameRival();\n\t\t\t\t\tthis.resultGame();\n\t\t\t\t\tthis.dataGameService.addWordsDictionary(this.arrayForDictionary);\n\t\t\t\t\tthis._store$.dispatch(getWordsFromLS({}));\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tpublic goToDictionary(pageName: string): void {\n\t\tthis.router.navigate([`${pageName}`]);\n\t}\n\n\tpublic onSaved(): void {\n\t\tthis._store$.dispatch(setGameStatus({ gameStatus: 'start' }));\n\t\tthis._store$.dispatch(getProfileUserFromLS({}));\n\t}\n\n\tpublic resultGameRival(): void {\n\t\tconst minAnswerRival: number = 15;\n\t\tthis.correctAnswerRival = Math.floor(Math.random() * (this.allAnswerRival - minAnswerRival) + minAnswerRival);\n\t\tthis.wrongAnserRival = this.allAnswerRival - this.correctAnswerRival;\n\t}\n\n\tpublic resultGame(): void {\n\t\tconst totalPoints: number = this.correctAnswer - this.wrongAnswer * 2;\n\t\tconst totalPointRival: number = this.correctAnswerRival - this.wrongAnserRival * 2;\n\t\tif (totalPoints > totalPointRival) {\n\t\t\tthis.resultAllGame = 'GAME.RESULT_WIN';\n\t\t} else if (totalPoints < totalPointRival) {\n\t\t\tthis.resultAllGame = 'GAME.RESULT_FAIL';\n\t\t} else {\n\t\t\tthis.resultAllGame = 'GAME.RESULT_DRAW';\n\t\t}\n\t}\n\n}\n","<div class=\"app-game\">\n\t<div *ngIf=\"(gameStatus$ | async) === 'profile'\" class=\"app-game--container-profile\">\n\t\t<app-profile (onSaved)=\"onSaved()\"></app-profile>\n\t</div>\n\n\t<div *ngIf=\"(gameStatus$ | async) === 'start'\" class=\"app-game--container-start\">\n\t\t<button class=\"app-game--btn-start\" (click)=\"startTimer()\">{{'GAME.BUTTON-START' | translate}}</button>\n\t\t<div class=\"app-game--ball\"></div>\n\t</div>\n\t<div *ngIf=\"(gameStatus$ | async) === 'game'\" class=\"app-game--container-game\">\n\t\t<div class=\"app-game--container-avatar\">\n\t\t\t<div>\n\t\t\t\t<div class=\"app-game--avatar\"><img src=\"{{(randomRival$ | async).src}}\"></div>\n\t\t\t\t<p class=\"app-game--nickname\">{{(randomRival$ | async).nickname}}</p>\n\t\t\t</div>\n\t\t\t<div class=\"app-game--spinner\">\n\t\t\t\t<mat-progress-spinner [mode]=\"mode\" [value]=\"valueProgressSpinner\" aria-label=\"showText\"\n\t\t\t\t\t[strokeWidth]=\"strokeWidth\" [diameter]=\"diameter\">\n\t\t\t\t</mat-progress-spinner>\n\n\t\t\t\t<div class=\"app-game--count\">{{count}}</div>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<div class=\"app-game--avatar\"><img src=\"{{(User$ | async ).src}}\"></div>\n\t\t\t\t<p class=\"app-game--nickname\">{{(User$ | async ).nickname}}</p>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"app-game--word-english\">{{(word$ | async).englishWord}}</div>\n\t\t<div class=\"app-game--hidden-content\">\n\t\t\t<img src=\"./assets/img/checkmark.png\" alt=\"checkmark\" class=\"app-game--checkmark\"\n\t\t\t\t[style.display]=\"selectedAnswer === 'true'?'block':'none'\">\n\t\t\t<img src=\"./assets/img/close.svg.png\" alt=\"checkmark\" class=\"app-game--close\"\n\t\t\t\t[style.display]=\"selectedAnswer === 'false'?'block':'none'\">\n\t\t</div>\n\t\t<button mat-stroked-button *ngFor=\"let wordRu of answers$ | async; let i = index\" (click)=\"checkAnswer(wordRu, i)\"\n\t\t\t[ngStyle]=\"color[i]\" class=\"app-game--btn-answer\">{{wordRu}}</button>\n\t</div>\n\t<div *ngIf=\"(gameStatus$ | async) === 'complete'\" class=\"app-game--container-complete\">\n\t\t<div [ngClass]=\"{ win: (resultAllGame === 'GAME.RESULT_WIN')}\">\n\t\t\t<div class=\"app-game--result-game\">\n\t\t\t\t<div class=\"app-game--result-text-complete\" [style.color]=\"resultAllGame === 'GAME.RESULT_WIN'? 'green' : 'red'\">\n\t\t\t\t\t{{resultAllGame | translate}}</div>\n\t\t\t\t<div class=\"app-game--game-outcome\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class=\"app-game--avatar-complete\"><img src=\"{{(randomRival$ | async).src}}\"></div>\n\t\t\t\t\t\t<p class=\"app-game--nickname\">{{(randomRival$ | async).nickname}}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"app-game--result\">\n\t\t\t\t\t\t<p class=\"app-game--answer\">{{'GAME.TRUE-ANSWER' | translate}}:\n\t\t\t\t\t\t\t<span>{{correctAnswerRival}}</span></p>\n\t\t\t\t\t\t<p class=\"app-game--answer\">{{'GAME.WRONG-ANSWER' | translate}}:\n\t\t\t\t\t\t\t<span>{{wrongAnserRival}}</span></p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"app-game--result-text\" [style.color]=\"resultAllGame === 'GAME.RESULT_WIN'? 'green' : 'red'\">\n\t\t\t\t\t{{resultAllGame | translate}}</div>\n\t\t\t\t<div class=\"app-game--game-outcome\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class=\"app-game--avatar-complete\"><img src=\"{{(User$ | async ).src}}\"></div>\n\t\t\t\t\t\t<p class=\"app-game--nickname\">{{(User$ | async ).nickname}}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"app-game--result\">\n\t\t\t\t\t\t<p class=\"app-game--answer\">{{'GAME.TRUE-ANSWER' | translate}}: <span>{{correctAnswer}}</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p class=\"app-game--answer\">{{'GAME.WRONG-ANSWER' | translate}}: <span>{{wrongAnswer}}</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button mat-raised-button color=\"accent\" (click)=\"goToDictionary('/dictionary')\"\n\t\t\t\tclass=\"app-game--btn-complete\">{{'GAME.BUTTON-LEARN' | translate}}</button>\n\t\t\t<button mat-raised-button color=\"primary\" (click)=\"startTimer()\"\n\t\t\t\tclass=\"app-game--btn-complete\">{{'GAME.BUTTON-REPEAT' | translate}}</button>\n\t\t</div>\n\t</div>\n\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { Word } from '../word.model';\n\n@Injectable()\nexport class AudioService {\n\tpublic urlAPI: string = 'https://api.soundoftext.com/sounds';\n\tconstructor(private _http: HttpClient) {\n\t}\n\n\tpublic getAudio(word: string): Observable<any> {\n\t\treturn this._http.post(this.urlAPI, JSON.stringify({ engine: 'Google', data: { text: word, voice: 'en-US' } }),\n\t\t\t{ headers: { 'Content-Type': 'application/json' } })\n\t\t\t.pipe(\n\t\t\t\tmergeMap((items: any) => {\n\t\t\t\t\treturn this._http.get('https://api.soundoftext.com/sounds/' + items.id);\n\t\t\t\t})\n\t\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Word } from '../word.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class DataGameService {\n\n\tprivate static wordsforLearningLSKey: string = 'wordsforLearning';\n\tpublic url: string = './assets/words.json';\n\tpublic words: Word[] = [];\n\tpublic numberOptionsAnswer: number = 3;\n\n\tconstructor(private _httpClient: HttpClient) { }\n\n\tpublic getRandomWord(): Word {\n\t\tconst rand: number = Math.floor(Math.random() * this.words.length);\n\t\tconst randWord: Word = this.words[rand];\n\t\treturn randWord;\n\t}\n\n\tpublic loadWordList(): Observable<Word[]> {\n\t\tconst gettingDataFromLocalStorage: any = localStorage.getItem(DataGameService.wordsforLearningLSKey);\n\t\tif (gettingDataFromLocalStorage) {\n\t\t\tconst wordsStorageString: any = gettingDataFromLocalStorage;\n\t\t\tconst wordsStorage: Word[] = JSON.parse(wordsStorageString);\n\t\t\treturn of(wordsStorage);\n\t\t}\n\t\treturn of([]);\n\t}\n\n\tpublic save(words: Word[]): void {\n\t\tconst dataForLocalSrorageString: string = JSON.stringify(words);\n\t\tlocalStorage.setItem(DataGameService.wordsforLearningLSKey, dataForLocalSrorageString);\n\t}\n\n\tpublic addWordsDictionary(words: Word[]): void {\n\t\tconst gettingDataFromLocalStorage: any = localStorage.getItem(DataGameService.wordsforLearningLSKey);\n\t\tif (gettingDataFromLocalStorage) {\n\t\t\tconst wordsStorageString: any = gettingDataFromLocalStorage;\n\t\t\tconst wordsStorage: Word[] = JSON.parse(wordsStorageString);\n\t\t\twords = words.filter( (value: Word) => {\n\t\t\t\t// tslint:disable-next-line: typedef\n\t\t\t\tconst result = wordsStorage.find((data) => {\n\t\t\t\t\treturn data.id === value.id;\n\t\t\t\t});\n\t\t\t\tif (result) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst dataForLocalSrorageConcat: Word[] = wordsStorage.concat(words);\n\t\t\tconst dataForLocalSrorageString: string = JSON.stringify(dataForLocalSrorageConcat);\n\t\t\tlocalStorage.setItem(DataGameService.wordsforLearningLSKey, dataForLocalSrorageString);\n\t\t} else {\n\t\t\tconst dataForLocalStorage: string = JSON.stringify(words);\n\t\t\tlocalStorage.setItem(DataGameService.wordsforLearningLSKey, dataForLocalStorage);\n\t\t}\n\t}\n\n\tpublic removeWordFromDictionary(word: Word): Observable<any> {\n\t\treturn this.loadWordList().\n\t\t\tpipe(\n\t\t\t\tmap((items: Word[]) => {\n\t\t\t\t\titems = items.filter((item: Word) => item.id !== word.id);\n\t\t\t\t\tthis.save(items);\n\n\t\t\t\t\treturn items;\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tpublic loadWordsHttp(): void {\n\t\tthis._httpClient.get<Word[]>(this.url).subscribe((items: Word[]) => this.words = items);\n\t}\n\n\tpublic getRandomAnswers(word: Word): string[] {\n\t\tconst wordsForArrayAnswer: Set<string> = new Set();\n\t\twordsForArrayAnswer.add(word.russianWord);\n\t\twhile (wordsForArrayAnswer.size < this.numberOptionsAnswer) {\n\t\t\tconst randomRuWord: Word = this.getRandomWord();\n\t\t\twordsForArrayAnswer.add(randomRuWord.russianWord);\n\t\t}\n\t\tconst newLocal: number = 0.5;\n\t\treturn Array.from(wordsForArrayAnswer).sort(() => Math.random() - newLocal);\n\t}\n}\n","export class Word {\n\tpublic id: string;\n\tpublic russianWord: string;\n\tpublic englishWord: string;\n\tpublic isLoading?: boolean = false;\n\n\tconstructor(russianWord?: string, englishWord?: string, id?: string) {\n\t\tthis.russianWord = russianWord;\n\t\tthis.englishWord = englishWord;\n\t\tthis.id = id;\n\t}\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n\tselector: 'app-home',\n\ttemplateUrl: './home.component.html',\n\tstyleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\tconstructor(private router: Router, public translate: TranslateService) {\n\t\ttranslate.addLangs(['en', 'ru']);\n\t\ttranslate.setDefaultLang('en');\n\t\tconst browserLang: any = translate.getBrowserLang();\n\t\ttranslate.use(browserLang.match(/en|ru/) ? browserLang : 'en');\n\t}\n\n\t \tpublic goToGame(pageName: string): void {\n\t\t  this.router.navigate([`${pageName}`]);\n\t\t}\n\n\t}\n","<div class=\"app-home\">\n\t<div class=\"app-home--container\">\n\t<h1 class=\"app-home--title\">{{'HOME.TITLE' | translate}}</h1>\n\t<div class=\"app-home--text\">{{'HOME.TEXT' | translate}}</div>\n\t<button class=\"app-home--button\" (click)=\"goToGame('/game')\">\n\t\t{{'HOME.BUTTON' | translate}}</button>\n\t</div>\n</div>","import { MissingTranslationHandler, MissingTranslationHandlerParams } from '@ngx-translate/core';\n\nexport class MissingTranslationService implements MissingTranslationHandler {\n\tpublic handle (params: MissingTranslationHandlerParams): string {\n\t  return `WARN: '${params.key}' is missing in '${params.translateService.currentLang}' locale`;\n\t}\n  }\n","import { Component } from '@angular/core';\nimport { DataGameService } from '../game/service/data-game.service';\nimport { Word } from '../game/word.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { select, Store } from '@ngrx/store';\nimport { selectDictionaryCount } from 'src/app/store/selectors/dictionary.selectors';\nimport { DictionaryState } from 'src/app/store/state/dictionary.state';\n\n@Component({\n\tselector: 'app-menu',\n\ttemplateUrl: './menu.component.html',\n\tstyleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent {\n\tpublic dictionary: Word[] = [];\n\tpublic numberWordsInDictionary: number = null;\n\tpublic dictionaryCount$: Observable<number> = this._store$.pipe(select(selectDictionaryCount));\n\n\tconstructor(public dataGameService: DataGameService, public translate: TranslateService, public _store$: Store<DictionaryState>) {\n\t\ttranslate.addLangs(['en', 'ru']);\n\t\ttranslate.setDefaultLang('en');\n\t\tconst browserLang: any = translate.getBrowserLang();\n\t\ttranslate.use(browserLang.match(/en|ru/) ? browserLang : 'en');\n\t}\n\n}\n","<div class=\"app-menu\">\n\t<div class=\"app-menu--container\">\n\t<div class=\"app-menu--navigate\">\n\t\t<a routerLink=\"\" class=\"app-menu--link\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:true}\">{{'MENU.HOME' | translate}}</a>\n\t\t<a routerLink=\"/game\" class=\"app-menu--link\" routerLinkActive=\"active-link\">{{'MENU.GAME' | translate}}</a>\n\t\t<a routerLink=\"/dictionary\" class=\"app-menu--link\" routerLinkActive=\"active-link\"> <span matBadge=\"{{dictionaryCount$ | async}}\" matBadgeOverlap=\"false\">{{'MENU.DICTIONARY' | translate}}</span></a>\n\t\t<a routerLink=\"/translate\" class=\"app-menu--link\" routerLinkActive=\"active-link\">{{'MENU.TRANSLATOR' | translate}}</a> \n\t\t<a routerLink=\"/about-me\" class=\"app-menu--link\" routerLinkActive=\"active-link\">{{'MENU.ABOUT ME' | translate}}</a>\n\t</div>\n\t<div class=\"app-menu--mat-menu\">\n\t\t<button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n\t\t\t<mat-icon>more_vert</mat-icon>\n\t\t  </button>\n\t\t  <mat-menu #menu=\"matMenu\">\n\t\t\t<button mat-menu-item [routerLink] = \"['/']\">\n\t\t\t  <mat-icon>home</mat-icon>\n\t\t\t  <span>{{'MENU.HOME' | translate}}</span>\n\t\t\t</button>\n\t\t\t<button mat-menu-item [routerLink] = \"['/game']\">\n\t\t\t  <mat-icon>gamepad</mat-icon>\n\t\t\t  <span>{{'MENU.GAME' | translate}}</span>\n\t\t\t</button>\n\t\t\t<button mat-menu-item [routerLink] = \"['/dictionary']\">\n\t\t\t  <mat-icon>menu_book</mat-icon>\n\t\t\t  <span>{{'MENU.DICTIONARY' | translate}}</span>\n\t\t\t</button>\n\t\t\t<button mat-menu-item [routerLink] = \"['/translate']\">\n\t\t\t\t<mat-icon>search</mat-icon>\n\t\t\t\t<span>{{'MENU.TRANSLATOR' | translate}}</span>\n\t\t\t  </button>\n\t\t\t  <button mat-menu-item [routerLink] = \"['/about-me']\">\n\t\t\t\t<mat-icon>person_outline</mat-icon>\n\t\t\t\t<span>{{'MENU.ABOUT ME' | translate}}</span>\n\t\t\t  </button>\n\t\t  </mat-menu>\n\t</div>\n\t<div class=\"app-menu--toggle-button\">\n\t    <mat-button-toggle-group #langSelect=\"matButtonToggleGroup\" (change)=\" translate.use(langSelect.value)\">\n\t\t\t\t<mat-button-toggle *ngFor=\"let lang of translate.getLangs()\" [value]=\"lang\" [checked]=\"lang === translate.currentLang\" >{{lang==\"ru\"?\"🇷🇺\":\"🇬🇧\"}}</mat-button-toggle>\n\t\t\t  </mat-button-toggle-group> \n\t</div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent {\n\n\tconstructor(public translate: TranslateService) {\n\t\ttranslate.addLangs(['en', 'ru']);\n\t\ttranslate.setDefaultLang('en');\n\t\tconst browserLang: any = translate.getBrowserLang();\n\t\ttranslate.use(browserLang.match(/en|ru/) ? browserLang : 'en');\n\t}\n\n  public back(): void {\n\twindow.history.back();\n  }\n}\n","<div class=\"app-not-found\">\n\t<div class=\"app-not-found--container\">\n\t\t<div class=\"app-not-found--info\">\n\t\t<p class=\"app-not-found--number\">404</p>\n\t\t<p class=\"app-not-found--text\">{{'NOTFOUND.TEXT' | translate}}</p>\n\t\t<button mat-stroked-button (click)=\"back()\" class=\"app-not-found--btn\">{{'NOTFOUND.BUTTON' | translate}}</button>\n\t  </div>\n\t\t<img src=\"./assets/img/404.png\" class=\"app-not-found--img\">\n\t</div>\n</div>","import { Component, Output, EventEmitter } from '@angular/core';\nimport { ProfileService } from './service/profile.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Store } from '@ngrx/store';\nimport { Profile } from './profile.model';\nimport { saveProfileUser } from 'src/app/store/action/profile.actions';\n\n@Component({\n\tselector: 'app-profile',\n\ttemplateUrl: './profile.component.html',\n\tstyleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent {\n\tpublic nickname: string = null;\n\tpublic idAvatar: number = null;\n\n\t@Output() public onSaved: EventEmitter<any> = new EventEmitter();\n\n\tconstructor(public profileService: ProfileService, public translate: TranslateService, private _store: Store) {\n\t\ttranslate.addLangs(['en', 'ru']);\n\t\ttranslate.setDefaultLang('en');\n\t\tconst browserLang: any = translate.getBrowserLang();\n\t\ttranslate.use(browserLang.match(/en|ru/) ? browserLang : 'en');\n\t}\n\n\tpublic getIdAvatar(data: number): void {\n\t\tthis.idAvatar = data;\n\t}\n\n\tpublic save(nickname: string, idAvatar: number): void {\n\tconst profile: Profile = new Profile();\n\tprofile.nickname = nickname;\n\tprofile.id = idAvatar;\n\tthis._store.dispatch(saveProfileUser({profile}));\n\t\tthis.onSaved.emit();\n\t}\n\n}\n","<div class=\"app-profile\"> \n\t<p class=\"app-profile--text\">{{'PROFILE.TITLE' | translate}}</p>\n\t<mat-form-field class=\"example-form-field\">\n\t\t<mat-label>{{'PROFILE.MAT-LABEL' | translate}}</mat-label>\n\t\t<input matInput type=\"text\" [(ngModel)]=\"nickname\" #xxx = \"ngModel\" required>\n\t\t<button mat-button *ngIf=\"nickname\" matSuffix mat-icon-button (click)=\"nickname=''\" class=\"app-profile--button-close\">\n\t\t  <mat-icon>close</mat-icon>\n\t\t</button>\n\t  </mat-form-field>\n\t<div class=\"app-profile--container\">\n\t\t<button *ngFor=\"let avatar of profileService.avatars\" class=\"app-profile--button-avatar\" (click)=\"getIdAvatar(avatar.id)\"><img src=\"{{avatar.src}}\" class=\"app-profile--avatar\"></button>\n   </div>\n   <button mat-raised-button color=\"primary\" (click)=\"save(nickname, idAvatar)\" [disabled]=\"xxx.invalid || !idAvatar\" class=\"app-profile--button-done\" >{{'PROFILE.BUTTON' | translate}}</button>\n</div>","export class Profile {\n\tpublic id?: number;\n\tpublic src?: string;\n\tpublic nickname?: string;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Profile } from '../profile.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n@Injectable()\nexport class ProfileService {\n\n\tprivate static profileKeyLS: string = 'profileKeyLS';\n\tpublic baseURL: string = './assets/avatars.json';\n\tpublic avatars: Profile[] = [];\n\tpublic nicknameRival: any = ['Саша', 'Женя', 'Знаток', 'Учитель'];\n\tconstructor(private _http: HttpClient) { }\n\tpublic loadAvatarHttp(): Observable<Profile[]> {\n\t\treturn this._http.get<Profile[]>(this.baseURL).pipe(\n\t\t\tmap((items: Profile[]) => {\n\t\t\t\tthis.avatars = items;\n\n\t\t\t\treturn items;\n\t\t\t})\n\t\t);\n\t}\n\tpublic saveProfile(userName: string, idAvatar: number): void {\n\t\tconst dataUser: Profile = {\n\t\t\tnickname: userName,\n\t\t\tid: idAvatar\n\t\t};\n\t\tconst dataUserLS: string = JSON.stringify(dataUser);\n\t\tlocalStorage.setItem(ProfileService.profileKeyLS, dataUserLS);\n\t}\n\n\tpublic getProfileFromLS(): Profile {\n\t\tconst gettingDataFromLocalStorage: any = localStorage.getItem(ProfileService.profileKeyLS);\n\t\tif (gettingDataFromLocalStorage) {\n\t\t\tconst datafromStorage: Profile = JSON.parse(gettingDataFromLocalStorage);\n\t\t\tconst foundElement: Profile = this.avatars.find((data: Profile) => data.id === datafromStorage.id);\n\t\t\tdatafromStorage.src = foundElement.src;\n\t\t\treturn datafromStorage;\n\t\t}\n\n\t\treturn new Profile();\n\t}\n\n\tpublic getRandomUser(): Profile {\n\t\tconst rand: number = Math.floor(Math.random() * this.avatars.length);\n\t\tconst randNickname: number = Math.floor(Math.random() * this.nicknameRival.length);\n\t\tconst profile: Profile = new Profile();\n\t\tprofile.src = this.avatars[rand].src;\n\t\tprofile.nickname = this.nicknameRival[randNickname];\n\t\treturn profile;\n\t}\n}\n","import { APIYandex } from './apiYandex.model';\n\nexport class FullTranslation {\n\tpublic translate: string[];\n\n\tpublic parseTranslation(data: APIYandex.RootObject): any {\n\t\tif (data.def.length === 0) {\n\t\t\tthrow new Error('word not found');\n\t\t}\n\t\tthis.translate = data.def[0].tr.map((item: APIYandex.Tr) => item.text);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { APIYandex } from '../apiYandex.model';\nimport { FullTranslation } from '../fullTranslator.model';\n\n@Injectable()\nexport class DataService {\n\tpublic urlAPI: string = 'https://dictionary.yandex.net/api/v1/dicservice.json/lookup?key=';\n\tpublic mainAPIKey: string = 'dict.1.1.20200609T214032Z.bb7f13f95e75ccf2.de79d0d2a909a5510ae3147dde13ba2f0d3f1dd8';\n\tpublic urlForImg: string = 'https://source.unsplash.com/500x500/?';\n\n\tconstructor(private _http: HttpClient) { }\n\n\tpublic translateWord(data: string, lang: string): Observable<FullTranslation> {\n\t\tconst url: string = `${this.urlAPI}${this.mainAPIKey}&lang=${lang}&text=${data}`;\n\t\treturn this._http.post(url, null).pipe(\n\t\t\tmap((items: APIYandex.RootObject) => {\n\t\t\t\tconst translation: FullTranslation = new FullTranslation();\n\t\t\t\ttranslation.parseTranslation(items);\n\t\t\t\treturn translation;\n\t\t\t}));\n\t}\n\n\tpublic getImg(data: string): any {\n\t\tconst url: string = `${this.urlForImg}${data}`;\n\t\treturn this._http.get(url, { responseType: 'blob', observe: 'response' });\n\t}\n}\n","import { Component } from '@angular/core';\nimport { TranslateState } from 'src/app/store/state/translate.state';\nimport { Store, select } from '@ngrx/store';\nimport { translate, resultTranslate } from 'src/app/store/action/translate.action';\nimport { selectError, selectWordTranslate } from 'src/app/store/selectors/translate.selectors';\nimport { Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DataService } from './service/data.service';\n\n@Component({\n\tselector: 'app-translator',\n\ttemplateUrl: './translator.component.html',\n\tstyleUrls: ['./translator.component.scss']\n})\n\nexport class TranslatorComponent {\n\tpublic wordTranslate$: Observable<string[]> = this._store$.pipe(select(selectWordTranslate));\n\tpublic error$: Observable<string> = this._store$.pipe(select(selectError));\n\tpublic word: string;\n\tpublic srcImg: string = '';\n\tpublic lang: string = 'ru-en';\n\t// tslint:disable-next-line: no-shadowed-variable\n\tconstructor(public _store$: Store<TranslateState>, public translate: TranslateService, public translator: DataService) {\n\t\ttranslate.addLangs(['en', 'ru']);\n\t\ttranslate.setDefaultLang('en');\n\t\tconst browserLang: any = translate.getBrowserLang();\n\t\ttranslate.use(browserLang.match(/en|ru/) ? browserLang : 'en');\n\t}\n\n\tpublic translateWord(): void {\n\t\tthis.translator.getImg(this.word).subscribe((data: any) =>  {\n\t\t\tconst link: string = data.url;\n\t\tif (link.includes('source-404')) {\n\t\t\tthis.srcImg = './assets/img/705.jpg';\n\t\t} else {\n\t\t\tthis.srcImg = link;\n\t\t}\n\t\t},\n\t\t (error: any ) => {\n\t\t\terror = this.srcImg = './assets/img/705.jpg';\n\t\t});\n\t\treturn this._store$.dispatch(translate({ word: this.word, lang: this.lang }));\n\t}\n\n\tpublic onTitleChange(): void {\n\t\tif (this.word.length === 0) {\n\t\t\treturn this._store$.dispatch(resultTranslate({ wordTranslate: [] }));\n\t\t}\n\t}\n\n\tpublic changeLang(): void {\n\t\tif (this.lang === 'ru-en') {\n\t\t\tthis.lang = 'en-ru';\n\t\t} else {\n\t\t\tthis.lang = 'ru-en';\n\t\t}\n\t}\n\n}\n","\n<div class=\"app-translator\">\n\t<div class=\"app-translator--container\">\n\t\t<div class=\"app-translator--container-translator\">\n\t\t<div class=\"app-translator--translate\">\n\t\t\t<div class=\"app-translator--lang\">{{(lang === 'ru-en'?'TRANSLATOR.RU':'TRANSLATOR.EN') | translate}}</div>\n\t\t\t<div class=\"app-translator--arrows\" (click)=\"changeLang()\"><span class=\"material-icons\">\n\t\t\t\tsync_alt\n\t\t\t\t</span></div>\n\t\t\t<div class=\"app-translator--lang\">{{(lang === 'ru-en'?'TRANSLATOR.EN':'TRANSLATOR.RU') | translate}}</div>\n\t\t</div>\n\n\t\t<div class=\"app-translator--text\">\n\t\t\t<div class=\"app-translator--form\">\n\t\t\t\t<form class=\"app-translator--form\" (keyup.enter) =\"translateWord()\">\n\t\t\t\t\t<input placeholder=\"{{'TRANSLATOR.EXAMPLE' | translate}}\" \n\t\t\t\t\t\t[(ngModel)]=\"word\" type=\"text\" name=\"wordTranslate\" (ngModelChange)=\"onTitleChange()\"\n\t\t\t\t\t\tclass=\"app-translator--input\">\n\t\t\t\t\t<button mat-button *ngIf=\"word\" matSuffix mat-icon-button aria-label=\"Clear\"\n\t\t\t\t\t\t(click)=\"word=''; onTitleChange()\" class=\"app-translator--button\" type=\"button\" class=\"app-translator--btn\">\n\t\t\t\t\t\t<mat-icon>close</mat-icon>\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t<div class=\"app-translator--answer\">\n\t\t<div >{{(wordTranslate$ | async)[0]}}</div>\n\t\t\t<div *ngIf= \"error$ | async\">\n\t\t\t\t{{error$ | async}}</div>\n\t\t</div>\n\t</div>\n\t</div>\n\t<div class=\"app-translator--img\">\n\t\t<img src ={{srcImg}}>\n\t</div>\n</div>\n\n\n<div class=\"ball\" [style.visibility]=\"srcImg.length === 0 ? 'visible' : 'hidden'\"></div>\n</div>\n\n","import { createAction, props } from '@ngrx/store';\nimport { NotAllowedCheck, TypedAction, ActionCreator, Action } from '@ngrx/store/src/models';\nimport { Word } from 'src/app/components/game/word.model';\n\ntype TypeActionCreator<S extends string, O extends object> = ActionCreator<\n\tS, (props: O & NotAllowedCheck<O>) => & TypedAction<S>\n>;\n\nexport interface CustomAction extends Action {\n\tdictionary: Word[];\n\tword: Word;\n\tisLoading: boolean;\n\tsrc: string;\n}\n\nexport const getWordsFromLS: TypeActionCreator<string, {}> = createAction(\n\t'[Dictionary] get words from LS',\n);\n\nexport const setWordsFromLS: TypeActionCreator<string, { dictionary: Word[] }> = createAction(\n\t'[Dictionary] set words from LS',\n\tprops<{dictionary: Word[]}>()\n);\n\nexport const removeWordFromDictionary: TypeActionCreator<string, { word: Word }> = createAction(\n\t'[Dictionary] remove word from dictionary',\n\tprops<{word: Word}>()\n);\n\nexport const changeWordStatus: TypeActionCreator<string, { word: Word, isLoading: boolean }> = createAction(\n\t'[Dictionary] change status word',\n\tprops<{word: Word, isLoading: boolean}>()\n);\n\nexport const getAudioSrc: TypeActionCreator<string, { word: Word }> = createAction(\n\t'[Dictionary] get audio src',\n\tprops<{word: Word}>()\n);\n\nexport const setAudioSrc: TypeActionCreator<string, {word: Word, src: string }> = createAction(\n\t'[Dictionary] set audio src',\n\tprops<{word: Word, src: string}>()\n);\n","import { createAction, props } from '@ngrx/store';\nimport { NotAllowedCheck, TypedAction, ActionCreator } from '@ngrx/store/src/models';\nimport {  Action } from '@ngrx/store';\nimport { Word } from 'src/app/components/game/word.model';\n\ntype TypeActionCreator<S extends string, O extends object> = ActionCreator<\n\tS, (props: O & NotAllowedCheck<O>) => & TypedAction<S>\n>;\n\nexport interface CustomAction extends Action {\n\tgameStatus: string;\n\tword: Word;\n\tanswers: string[];\n}\n\nexport const setGameStatus: TypeActionCreator<string, { gameStatus: string} > = createAction(\n\t'[Game] set game status',\n\t props<{gameStatus: string}>()\n);\n\nexport const getNewQuestion: TypeActionCreator<string, {} > = createAction(\n\t'[Game] get words for game',\n);\n\nexport const setNewQuestion: TypeActionCreator<string, { word: Word, answers: string[]} > = createAction(\n\t'[Game] set words for game',\n\tprops<{word: Word, answers: string[]}>()\n);\n","import { createAction, props } from '@ngrx/store';\nimport { NotAllowedCheck, TypedAction, ActionCreator } from '@ngrx/store/src/models';\nimport { Action } from '@ngrx/store';\nimport { Profile } from 'src/app/components/profile/profile.model';\n\ntype TypeActionCreator<S extends string, O extends object> = ActionCreator<\n\tS, (props: O & NotAllowedCheck<O>) => & TypedAction<S>\n>;\n\nexport interface CustomAction extends Action {\n\tprofile: Profile;\n}\n\nexport const saveProfileUser: TypeActionCreator<string, { profile: Profile }> = createAction(\n\t'[Profile] save profile user',\n\tprops<{ profile: Profile }>()\n);\n\nexport const setProfileUser: TypeActionCreator<string, { profile: Profile }> = createAction(\n\t'[Profile] set profile user',\n\tprops<{ profile: Profile }>()\n);\n\nexport const getProfileUserFromLS: TypeActionCreator<string, {}> = createAction(\n\t'[Profile] get profile user from LS'\n);\n\nexport const getRivalProfile: TypeActionCreator<string, {}> = createAction(\n\t'[Profile] get profile rival',\n);\n\nexport const setRivalProfile: TypeActionCreator<string, { profile: Profile }> = createAction(\n\t'[Profile] set profile rival',\n\tprops<{ profile: Profile }>()\n);\n","import { createAction, props } from '@ngrx/store';\nimport { NotAllowedCheck, TypedAction, ActionCreator } from '@ngrx/store/src/models';\nimport { Action } from '@ngrx/store';\n\ntype TypeActionCreator<S extends string, O extends object> = ActionCreator<\n\tS, (props: O & NotAllowedCheck<O>) => & TypedAction<S>\n>;\n\nexport interface CustomAction extends Action {\n\twordTranslate: string[];\n\tword: string;\n\tlang: string;\n\terror: string;\n}\n\nexport const translate: TypeActionCreator<string, { word: string, lang: string }> = createAction(\n\t'[Translate] translate word',\n\tprops<{ word: string, lang: string }>()\n);\n\nexport const resultTranslate: TypeActionCreator<string, { wordTranslate: string[]}> = createAction(\n\t'[Translate] result translate',\n\tprops<{wordTranslate: string[]}>()\n);\n\nexport const error: TypeActionCreator<string, { error: string}> = createAction(\n\t'[Translate] error translate',\n\tprops<{error: string}>()\n);\n","import { Injectable } from '@angular/core';\nimport { ofType, createEffect, Actions } from '@ngrx/effects';\nimport { mergeMap, map, tap } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { TypedAction } from '@ngrx/store/src/models';\nimport { DataGameService } from 'src/app/components/game/service/data-game.service';\nimport { getWordsFromLS, setWordsFromLS, removeWordFromDictionary, CustomAction, setAudioSrc, getAudioSrc } from '../action/dictionary.action';\nimport { Word } from 'src/app/components/game/word.model';\nimport { AudioService } from 'src/app/components/game/service/audio.service';\n\n@Injectable()\nexport class DictionaryEffects {\n\tpublic getWordsFromLS$: Observable<TypedAction<string>> = createEffect(\n\t\t() => this.actions$.pipe(\n\t\t\tofType(getWordsFromLS),\n\t\t\tmergeMap(() => this.dataGameService.loadWordList()\n\t\t\t\t.pipe(\n\t\t\t\t\tmap((dictionary: Word[]) => {\n\t\t\t\t\t\treturn setWordsFromLS({ dictionary });\n\t\t\t\t\t})\n\t\t\t\t\t/* \tcatchError(() => of({ type: '[Todo] Todos Loaded Error' })) */\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\tpublic removeWord$: Observable<TypedAction<string>> = createEffect(\n\t\t() => this.actions$.pipe(\n\t\t\tofType(removeWordFromDictionary),\n\t\t\tmergeMap((action: CustomAction) => this.dataGameService.removeWordFromDictionary(action.word)\n\t\t\t\t.pipe(\n\t\t\t\t\tmap((dictionary: Word[]) => {\n\t\t\t\t\t\treturn setWordsFromLS({ dictionary });\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\tpublic playAudio$: Observable<TypedAction<string>> = createEffect(\n\t\t() => this.actions$.pipe(\n\t\t\tofType(getAudioSrc),\n\t\t\tmergeMap((action: CustomAction) => this.audioService.getAudio(action.word.englishWord)\n\t\t\t\t.pipe(\n\t\t\t\t\tmap((data: any) => {\n\t\t\t\t\t\treturn setAudioSrc({ word: action.word, src: data.location });\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\tconstructor(\n\t\tprivate actions$: Actions,\n\t\tprivate dataGameService: DataGameService,\n\t\tprivate audioService: AudioService\n\t) { }\n}\n","import { Injectable } from '@angular/core';\nimport { ofType, createEffect, Actions } from '@ngrx/effects';\nimport { mergeMap, map } from 'rxjs/operators';\nimport { Observable, of, } from 'rxjs';\nimport { TypedAction } from '@ngrx/store/src/models';\nimport { CustomAction } from '../action/profile.actions';\nimport { DataGameService } from 'src/app/components/game/service/data-game.service';\nimport { getNewQuestion, setNewQuestion } from '../action/game.action';\nimport { Word } from 'src/app/components/game/word.model';\n\n@Injectable()\nexport class GameEffects {\n\tpublic getNewQuestion$: Observable<TypedAction<string>> = createEffect(\n\t\t() => this.actions$.pipe(\n\t\t\tofType(getNewQuestion),\n\t\t\tmergeMap(() => of(1)\n\t\t\t\t.pipe(\n\t\t\t\t\tmap(() => {\n\t\t\t\t\t\tconst word: Word = this.dataGameService.getRandomWord();\n\t\t\t\t\t\tconst answers: string[] = this.dataGameService.getRandomAnswers(word);\n\t\t\t\t\t\treturn setNewQuestion({word, answers});\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\tconstructor(\n\t\tprivate actions$: Actions,\n\t\tprivate dataGameService: DataGameService\n\t) { }\n}\n","import { Injectable } from '@angular/core';\nimport { ofType, createEffect, Actions } from '@ngrx/effects';\nimport { mergeMap, map } from 'rxjs/operators';\nimport { Observable, of, } from 'rxjs';\nimport { TypedAction } from '@ngrx/store/src/models';\nimport { setProfileUser, saveProfileUser, getProfileUserFromLS, getRivalProfile, setRivalProfile } from '../action/profile.actions';\nimport { ProfileService } from 'src/app/components/profile/service/profile.service';\nimport { CustomAction } from '../action/profile.actions';\nimport { Profile } from 'src/app/components/profile/profile.model';\n\n@Injectable()\nexport class ProfileEffects {\n\tpublic saveProfileUser$: Observable<TypedAction<string>> = createEffect(\n\t\t() => this.actions$.pipe(\n\t\t\tofType(saveProfileUser),\n\t\t\tmergeMap((action: CustomAction) => of(this.profileService.saveProfile(action.profile.nickname, action.profile.id))\n\t\t\t\t.pipe(\n\t\t\t\t\tmap(() => {\n\t\t\t\t\t\treturn getProfileUserFromLS({});\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\tpublic getProfileUserFromLS$: Observable<TypedAction<string>> = createEffect(\n\t\t() => this.actions$.pipe(\n\t\t\tofType(getProfileUserFromLS),\n\t\t\tmergeMap(() => of(this.profileService.getProfileFromLS())\n\t\t\t\t.pipe(\n\t\t\t\t\tmap((profile: Profile) => {\n\t\t\t\t\t\treturn setProfileUser({ profile });\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\tpublic getRivalProfile$: Observable<TypedAction<string>> = createEffect(\n\t\t() => this.actions$.pipe(\n\t\t\tofType(getRivalProfile),\n\t\t\tmergeMap(() => of(this.profileService.getRandomUser())\n\t\t\t\t.pipe(\n\t\t\t\t\tmap((profile: Profile) => {\n\t\t\t\t\t\treturn setRivalProfile({ profile });\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\tconstructor(\n\t\tprivate actions$: Actions,\n\t\tprivate profileService: ProfileService\n\t) { }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\nimport { mergeMap, map, catchError} from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { DataService } from 'src/app/components/translator/service/data.service';\nimport { translate, resultTranslate, CustomAction, error } from '../action/translate.action';\nimport { TypedAction } from '@ngrx/store/src/models';\nimport { FullTranslation } from 'src/app/components/translator/fullTranslator.model';\n\n@Injectable()\nexport class TranslateEffects {\n\n\t\tpublic translate$: Observable<TypedAction<string>> = createEffect(\n\t\t\t() => this.actions$.pipe(\n\t\t\t\tofType(translate),\n\t\t\t\tmergeMap((action: CustomAction) => this.dataService.translateWord(action.word, action.lang)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tmap((data: FullTranslation) => {\n\t\t\t\t\t\t\treturn resultTranslate({ wordTranslate: data.translate});\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tcatchError((e: Error) => of(error({ error: e.message})))\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t)\n\t\t);\n\tconstructor(\n\t\tprivate actions$: Actions,\n\t\tprivate dataService: DataService,\n\t) { }\n\n}\n","import { ActionReducerMap } from '@ngrx/store';\nimport { TranslateState, featureKeyTranslate } from './state/translate.state';\nimport { StateReducerTranslate } from './reducer/translate.reducer';\nimport { StateReducerDictionary } from './reducer/dictionary.reducer';\nimport { featureKeyDictionary, DictionaryState } from './state/dictionary.state';\nimport { featureKeyGame, GameState } from './state/game.state';\nimport { StateReducerGame } from './reducer/game.reducer';\nimport { ProfileState, featureKeyProfile } from './state/profile.state';\nimport { StateReducerProfile } from './reducer/profile.reducers';\n\nexport interface IAppState {\n[featureKeyTranslate]: TranslateState;\n[featureKeyDictionary]: DictionaryState;\n[featureKeyGame]: GameState;\n[featureKeyProfile]: ProfileState;\n\n}\n\nexport const reducer: ActionReducerMap<IAppState> = {\n[featureKeyTranslate]: StateReducerTranslate,\n[featureKeyDictionary]: StateReducerDictionary,\n[featureKeyGame]: StateReducerGame,\n[featureKeyProfile]: StateReducerProfile,\n};\n","import { initialState } from '../state/dictionary.state';\nimport { createReducer, on, Action, ActionReducer } from '@ngrx/store';\nimport * as DictionaryAction from '../action/dictionary.action';\nimport { DictionaryState } from '../state/dictionary.state';\nimport { Word } from 'src/app/components/game/word.model';\n\nexport const dictionaryReducer: ActionReducer<DictionaryState, Action> = createReducer(\n\tinitialState,\n\ton(DictionaryAction.setWordsFromLS, (state: DictionaryState, action: DictionaryAction.CustomAction): DictionaryState => {\n\t\treturn {\n\t\t\t...state,\n\t\t\tdictionary: action.dictionary\n\t\t};\n\n\t}),\n\ton(DictionaryAction.changeWordStatus, (state: DictionaryState, action: DictionaryAction.CustomAction): DictionaryState => {\n\t\treturn {\n\t\t\t...state,\n\t\t\tdictionary: state.dictionary.map((item: Word) => {\n\t\t\t\tif (item.id === action.word.id) {\n\t\t\t\t\treturn { ...item, isLoading: action.isLoading };\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t})\n\t\t};\n\n\t}),\n\n\ton(DictionaryAction.setAudioSrc, (state: DictionaryState, action: DictionaryAction.CustomAction): DictionaryState => {\n\t\treturn {\n\t\t\t...state,\n\t\t\tsrcAudio: {src: action.src, word: action.word}\n\t\t};\n\n\t}),\n\n);\n\nexport function StateReducerDictionary(state: DictionaryState | undefined, action: Action): DictionaryState {\n\treturn dictionaryReducer(state, action);\n}\n","import { initialState } from '../state/game.state';\nimport { createReducer, on, Action, ActionReducer } from '@ngrx/store';\nimport * as GameAction from '../action/game.action';\nimport { GameState } from '../state/game.state';\n\nexport const gameReducer: ActionReducer<GameState, Action> = createReducer(\n\n\tinitialState,\n\ton(GameAction.setGameStatus, (state: GameState, action: GameAction.CustomAction): GameState => {\n\t\treturn ({\n\t\t\t...state,\n\t\t\tgameStatus: action.gameStatus\n\t\t});\n\t}),\n\n\ton(GameAction.setNewQuestion, (state: GameState, action: GameAction.CustomAction): GameState => {\n\t\treturn ({\n\t\t\t...state,\n\t\t\tword: action.word,\n\t\t\tanswers: action.answers\n\t\t});\n\t}),\n);\n\nexport function StateReducerGame(state: GameState | undefined, action: Action): GameState {\n\treturn gameReducer(state, action);\n}\n","import { initialState, ProfileState } from '../state/profile.state';\nimport { createReducer, on, Action, ActionReducer } from '@ngrx/store';\nimport * as ProfileAction from '../action/profile.actions';\n\nexport const profileReducer: ActionReducer<ProfileState, Action> = createReducer(\n\tinitialState,\n\ton(ProfileAction.setProfileUser, (state: ProfileState, action: ProfileAction.CustomAction): ProfileState => {\n\t\treturn ({\n\t\t\t...state,\n\t\t\tuserProfile: action.profile\n\t\t});\n\t}),\n\ton(ProfileAction.setRivalProfile, (state: ProfileState, action: ProfileAction.CustomAction): ProfileState => {\n\t\treturn ({\n\t\t\t...state,\n\t\t\trivalProfile: action.profile\n\t\t});\n\t}),\n\n);\n\nexport function StateReducerProfile(state: ProfileState | undefined, action: Action): ProfileState {\n\treturn profileReducer(state, action);\n}\n","import { initialState} from '../state/translate.state';\nimport { createReducer, on, Action, ActionReducer } from '@ngrx/store';\nimport * as TranslateAction from '../action/translate.action';\nimport { TranslateState } from '../state/translate.state';\n\nexport const translateReducer: ActionReducer<TranslateState, Action> = createReducer(\n\tinitialState,\n\ton(TranslateAction.resultTranslate, (state: TranslateState, action: TranslateAction.CustomAction): TranslateState => {\n\t\treturn {\n\t\t\t...state,\n\t\t\terror: '',\n\t\t\twordTranslate: action.wordTranslate\n\t\t};\n\n\t}),\n\ton(TranslateAction.error, (state: TranslateState, action: TranslateAction.CustomAction): TranslateState => {\n\t\treturn {\n\t\t\t...state,\n\t\t\terror: action.error\n\t\t};\n\n\t}),\n\n);\n\nexport function StateReducerTranslate(state: TranslateState | undefined, action: Action): TranslateState {\n\treturn translateReducer(state, action);\n}\n","import { createFeatureSelector, createSelector, MemoizedSelector } from '@ngrx/store';\nimport { featureKeyDictionary, DictionaryState } from '../state/dictionary.state';\n\nexport const selectStateDictionary: MemoizedSelector<object, DictionaryState> =\n createFeatureSelector<DictionaryState>(featureKeyDictionary);\n\n// tslint:disable-next-line: max-line-length\nexport const selectDictionary: any = createSelector(selectStateDictionary, (state: DictionaryState) => state.dictionary);\n// tslint:disable-next-line: max-line-length\nexport const selectDictionaryCount: any = createSelector(selectStateDictionary, (state: DictionaryState) => state.dictionary.length);\n\nexport const selectSrcAudio: any = createSelector(selectStateDictionary, (state: DictionaryState) => state.srcAudio);\n","import { createFeatureSelector, createSelector} from '@ngrx/store';\nimport { GameState, featureKeyGame } from '../state/game.state';\nimport { Word } from 'src/app/components/game/word.model';\n\nexport const selectGameFeature: any = createFeatureSelector<GameState>(featureKeyGame);\nexport const selectStatusGame: any = createSelector(\n\tselectGameFeature,\n\t(state: GameState): string => state.gameStatus\n);\n\nexport const selectWord: any = createSelector(\n\tselectGameFeature,\n\t(state: GameState): Word => state.word\n);\n\nexport const selectAnswers: any = createSelector(\n\tselectGameFeature,\n\t(state: GameState): string[] => state.answers\n);\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { featureKeyProfile, ProfileState } from '../state/profile.state';\n\nexport const selectStateProfile: any = createFeatureSelector<ProfileState>(featureKeyProfile);\n\nexport const selectRivalProfile: any = createSelector(selectStateProfile, (state: ProfileState) => state.rivalProfile);\n\nexport const selectUserProfile: any = createSelector(selectStateProfile, (state: ProfileState) => state.userProfile);\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { TranslateState, featureKeyTranslate } from '../state/translate.state';\n\nexport const selectStateTranslate: any = createFeatureSelector<TranslateState>(featureKeyTranslate);\n\n// tslint:disable-next-line: max-line-length\nexport const selectWordTranslate: any = createSelector(selectStateTranslate, (state: TranslateState) => state.wordTranslate);\n// tslint:disable-next-line: max-line-length\nexport const selectWord: any = createSelector(selectStateTranslate, (state: TranslateState) => state.word);\n\nexport const selectError: any = createSelector(selectStateTranslate, (state: TranslateState) => state.error);\n","import { Word } from 'src/app/components/game/word.model';\n\nexport interface DictionaryState {\n\tdictionary: Word[];\n\tsrcAudio: object;\n}\n\nexport const featureKeyDictionary: 'DICTIONARY' = 'DICTIONARY';\n\nexport const initialState: DictionaryState = {\n\tdictionary: [],\n\tsrcAudio: {}\n};\n","import { Word } from 'src/app/components/game/word.model';\n\nexport interface GameState {\n\tgameStatus: string;\n\tword: Word;\n\tanswers: string[];\n}\n\nexport const featureKeyGame: 'GAME' = 'GAME';\n\nexport const initialState: GameState = {\n\tgameStatus: 'profile',\n\tword: new Word(),\n\tanswers: []\n};\n","import { Profile } from 'src/app/components/profile/profile.model';\n\nexport interface ProfileState {\n\tuserProfile: Profile;\n\trivalProfile: Profile;\n\n}\n\nexport const featureKeyProfile: 'PROFILE' = 'PROFILE';\n\nexport const initialState: ProfileState = {\n\tuserProfile: new Profile(),\n\trivalProfile: new Profile()\n};\n","export interface TranslateState {\n\tid: number;\n\tword: string;\n\twordTranslate: string[];\n\terror: string;\n}\n\nexport const featureKeyTranslate: 'TRANSLATE' = 'TRANSLATE';\n\nexport const initialState: TranslateState = {\n\tid: 0,\n\tword: '',\n\twordTranslate: [],\n\terror: '',\n\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment: any = {\n  production: false,\n  locales: ['en', 'ru'],\n  defaultLocale: 'ru',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}