{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/about-me/about-me.component.ts","./src/app/components/about-me/about-me.component.html","./src/app/components/dictionary/dictionary.component.ts","./src/app/components/dictionary/dictionary.component.html","./src/app/components/game/game.component.ts","./src/app/components/game/game.component.html","./src/app/components/game/service/audio.service.ts","./src/app/components/game/service/data-game.service.ts","./src/app/components/game/word.model.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/locale service/missing-translation.service.ts.ts","./src/app/components/menu/menu.component.ts","./src/app/components/menu/menu.component.html","./src/app/components/not-found/not-found.component.ts","./src/app/components/not-found/not-found.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/profile/profile.model.ts","./src/app/components/profile/service/profile.service.ts","./src/app/components/translator/fullTranslator.model.ts","./src/app/components/translator/service/data.service.ts","./src/app/components/translator/translator.component.ts","./src/app/components/translator/translator.component.html","./src/app/store/action/dictionary.action.ts","./src/app/store/action/game.action.ts","./src/app/store/action/profile.actions.ts","./src/app/store/action/translate.action.ts","./src/app/store/effect/dictionary.effect.ts","./src/app/store/effect/game.effect.ts","./src/app/store/effect/profile.effects.ts","./src/app/store/effect/translate.effect.ts","./src/app/store/index.ts","./src/app/store/reducer/dictionary.reducer.ts","./src/app/store/reducer/game.reducer.ts","./src/app/store/reducer/profile.reducers.ts","./src/app/store/reducer/translate.reducer.ts","./src/app/store/selectors/dictionary.selectors.ts","./src/app/store/selectors/game.selectors.ts","./src/app/store/selectors/profile.selectors.ts","./src/app/store/selectors/translate.selectors.ts","./src/app/store/state/dictionary.state.ts","./src/app/store/state/game.state.ts","./src/app/store/state/profile.state.ts","./src/app/store/state/translate.state.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { TranslatorComponent } from './components/translator/translator.component';\nimport { GameComponent } from './components/game/game.component';\nimport { DictionaryComponent } from './components/dictionary/dictionary.component';\nimport { AboutMeComponent } from './components/about-me/about-me.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: HomeComponent\n\t},\n\t{\n\t\tpath: 'translate',\n\t\tcomponent: TranslatorComponent,\n\t},\n\t{\n\t\tpath: 'game',\n\t\tcomponent: GameComponent,\n\t},\n\t{\n\t\tpath: 'dictionary',\n\t\tcomponent: DictionaryComponent,\n\t},\n\t{\n\t\tpath: 'about-me',\n\t\tcomponent: AboutMeComponent,\n\t},\n\t{\n\t\tpath: '**',\n\t\tcomponent: NotFoundComponent,\n\t},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { environment } from 'src/environments/environment';\nimport { Store } from '@ngrx/store';\nimport { DictionaryState } from './store/state/dictionary.state';\nimport { getWordsFromLS } from './store/action/dictionary.action';\nimport { DataGameService } from './components/game/service/data-game.service';\nimport { ProfileService } from './components/profile/service/profile.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n\tconstructor(private translateService: TranslateService,  private _store$: Store<DictionaryState>,\n\t\tprivate dataGameServise: DataGameService, private profileService: ProfileService) {}\n\tpublic ngOnInit(): void {\n\t  this.translateService.use(environment.defaultLocale);\n\t  this._store$.dispatch(getWordsFromLS({}));\n\t  this.dataGameServise.loadWordsHttp();\n\t}\n}\n","<div class=\"app\">\n\t<app-menu></app-menu>\n\t<router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GameComponent } from './components/game/game.component';\nimport { DataService } from './components/translator/service/data.service';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { reducer } from './store';\nimport { ProfileEffects } from './store/effect/profile.effects';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslatorComponent } from './components/translator/translator.component';\nimport { TranslateEffects } from './store/effect/translate.effect';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { DictionaryComponent } from './components/dictionary/dictionary.component';\nimport { DataGameService } from './components/game/service/data-game.service';\nimport { AboutMeComponent } from './components/about-me/about-me.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { AudioService } from './components/game/service/audio.service';\nimport { MenuComponent } from './components/menu/menu.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { TranslateModule, TranslateLoader, MissingTranslationHandler } from '@ngx-translate/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MissingTranslationService } from './components/locale service/missing-translation.service.ts';\nimport { MatProgressButtonsModule } from 'mat-progress-buttons';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ProfileService } from './components/profile/service/profile.service';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { DictionaryEffects } from './store/effect/dictionary.effect';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { GameEffects } from './store/effect/game.effect';\n\nexport function HttpLoaderFactory(http: HttpClient): TranslateLoader {\n\treturn new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent,\n\t\tGameComponent,\n\t\tTranslatorComponent,\n\t\tDictionaryComponent,\n\t\tAboutMeComponent,\n\t\tHomeComponent,\n\t\tNotFoundComponent,\n\t\tMenuComponent,\n\t\tProfileComponent,\n\t],\n\timports: [\n\t\tBrowserModule,\n\t\tAppRoutingModule,\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tHttpClientModule,\n\t\tStoreModule.forRoot(reducer),\n\t\tStoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n\t\tEffectsModule.forRoot([TranslateEffects, DictionaryEffects, ProfileEffects, GameEffects]),\n\t\tStoreRouterConnectingModule.forRoot(),\n\t\tBrowserAnimationsModule,\n\t\tMatProgressSpinnerModule,\n\t\tMatInputModule,\n\t\tMatIconModule,\n\t\tMatBadgeModule,\n\t\tTranslateModule.forRoot({\n\t\t\tloader: {\n\t\t\t\tprovide: TranslateLoader,\n\t\t\t\tuseFactory: HttpLoaderFactory,\n\t\t\t\tdeps: [HttpClient]\n\t\t\t},\n\t\t\tmissingTranslationHandler: {\n\t\t\t\tprovide: MissingTranslationHandler,\n\t\t\t\tuseClass: MissingTranslationService,\n\t\t\t},\n\t\t\tdefaultLanguage: 'ru',\n\t\t}),\n\t\tMatProgressButtonsModule,\n\t\tMatButtonToggleModule,\n\t\tMatButtonModule,\n\t\tMatTableModule,\n\t\tMatPaginatorModule,\n\t\tMatMenuModule\n\t],\n\tproviders: [DataService, DataGameService, AudioService, ProfileService],\n\tbootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-about-me',\n  templateUrl: './about-me.component.html',\n  styleUrls: ['./about-me.component.scss']\n})\nexport class AboutMeComponent {\n\n  constructor(private translate: TranslateService) {\n\ttranslate.addLangs(['en', 'ru']);\n\ttranslate.setDefaultLang('en');\n\tconst browserLang: any = translate.getBrowserLang();\n\ttranslate.use(browserLang.match(/en|ru/) ? browserLang : 'en');\n  }\n\n}\n","<div class=\"app-about-me\">\n\t<div class=\"app-about-me--container\">\n\t\t<p class=\"app-about-me--text\">{{'ABOUT-ME.ARTICLE' | translate}}</p>\n\t\t<p class=\"app-about-me--text\">{{'ABOUT-ME.TEXT' | translate}} Angular Typescript, SCSS,  {{'ABOUT-ME.CONTINUE' | translate}} RxJS, NgRx.</p>\n\t</div>\n</div>","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { DataGameService } from '../game/service/data-game.service';\nimport { Word } from '../game/word.model';\nimport { AudioService } from '../game/service/audio.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatProgressButtonOptions } from 'mat-progress-buttons';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Store, select } from '@ngrx/store';\nimport { DictionaryState } from 'src/app/store/state/dictionary.state';\nimport { removeWordFromDictionary, changeWordStatus, getAudioSrc, setAudioSrc } from 'src/app/store/action/dictionary.action';\nimport { Observable, Subscription } from 'rxjs';\nimport { selectDictionary, selectSrcAudio } from 'src/app/store/selectors/dictionary.selectors';\nimport { Dictionary } from './dictionary.model';\n\n@Component({\n\tselector: 'app-dictionary',\n\ttemplateUrl: './dictionary.component.html',\n\tstyleUrls: ['./dictionary.component.scss']\n})\nexport class DictionaryComponent implements OnInit, OnDestroy {\n\tprivate dictionarySubscription: Subscription;\n\tprivate srcAudioSubscription: Subscription;\n\tpublic dictionary$: Observable<Word[]> = this._store$.pipe(select(selectDictionary));\n\tpublic srcAudio$: Observable<object> = this._store$.pipe(select(selectSrcAudio));\n\tpublic audio: HTMLAudioElement;\n\tpublic displayedColumns: string[] = ['index', 'englishWord', 'russianWord', 'listen', 'actions'];\n\tpublic dataSource: MatTableDataSource<Word> = new MatTableDataSource<Word>();\n\t@ViewChild(MatPaginator, { static: true }) public paginator: MatPaginator;\n\n\tpublic spinnerButtonOptions: MatProgressButtonOptions = {\n\t\tactive: false,\n\t\ttext: '🔈',\n\t\tspinnerSize: 18,\n\t\traised: true,\n\t\tstroked: false,\n\t\tbuttonColor: 'primary',\n\t\tspinnerColor: 'accent',\n\t\tfullWidth: false,\n\t\tdisabled: false,\n\t\tmode: 'indeterminate',\n\t};\n\n\tconstructor(public dataGameService: DataGameService, public audioService: AudioService,\n\t\tpublic translate: TranslateService, public _store$: Store<DictionaryState>) {\n\t\tthis.audio = new Audio();\n\t\ttranslate.addLangs(['en', 'ru']);\n\t\ttranslate.setDefaultLang('en');\n\t\tconst browserLang: any = translate.getBrowserLang();\n\t\ttranslate.use(browserLang.match(/en|ru/) ? browserLang : 'en');\n\t}\n\n\tpublic ngOnInit(): void {\n\t\tthis._store$.dispatch(setAudioSrc({ word: new Word(), src: '' }));\n\t\tthis.dictionarySubscription = this.dictionary$.subscribe((data: Word[]) => {\n\t\t\tthis.dataSource.data = data;\n\t\t\tthis.dataSource.paginator = this.paginator;\n\t\t});\n\n\t\tthis.srcAudioSubscription = this.srcAudio$.subscribe((data: Dictionary) => {\n\t\t\t// tslint:disable-next-line: strict-boolean-expressions\n\t\t\tif (!data.src) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.audio.src = data.src;\n\t\t\tthis.audio.play();\n\t\t\tthis.spinnerButtonOptions.active = false;\n\t\t\tthis._store$.dispatch(changeWordStatus({ word: data.word, isLoading: false }));\n\t\t});\n\t}\n\n\tpublic ngOnDestroy(): void {\n\t\tthis.dictionarySubscription.unsubscribe();\n\t\tthis.srcAudioSubscription.unsubscribe();\n\t}\n\n\tpublic removeWordFromDictionary(word: Word): void {\n\t\tthis._store$.dispatch(removeWordFromDictionary({ word }));\n\t}\n\n\tpublic playAudio(word: Word): void {\n\t\tthis.spinnerButtonOptions.active = true;\n\t\tthis._store$.dispatch(changeWordStatus({ word, isLoading: true }));\n\t\tthis._store$.dispatch(getAudioSrc({ word }));\n\t}\n\n\tpublic getSpinnerButtonOptions(word: Word): any {\n\t\treturn { ...this.spinnerButtonOptions, active: word.isLoading };\n\t}\n}\n","<div class=\"app-dictionary\">\n\n\t<div class=\"app-dictionary--container\">\n\t\t<div *ngIf=\"dataSource.filteredData.length > 0\">\n\t\t<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\t\t\t<ng-container matColumnDef=\"index\">\n\t\t\t\t<th mat-header-cell *matHeaderCellDef> N. </th>\n\t\t\t\t<td mat-cell *matCellDef=\"let element\" class=\"app-dictionary--index\">\n\t\t\t\t\t{{dataSource.filteredData.indexOf(element)+1}} </td>\n\t\t\t</ng-container>\n\n\t\t\t<ng-container matColumnDef=\"russianWord\">\n\t\t\t\t<th mat-header-cell *matHeaderCellDef>{{'DICTIONARY.TRANSLATION' | translate}}</th>\n\t\t\t\t<td mat-cell *matCellDef=\"let element\" class=\"app-dictionary--word\"> {{element.russianWord}} </td>\n\t\t\t</ng-container>\n\n\t\t\t<ng-container matColumnDef=\"englishWord\">\n\t\t\t\t<th mat-header-cell *matHeaderCellDef>{{'DICTIONARY.ENGLISH-WORD' | translate}}</th>\n\t\t\t\t<td mat-cell *matCellDef=\"let element\" class=\"app-dictionary--word\"> {{element.englishWord}} </td>\n\t\t\t</ng-container>\n\n\t\t\t<ng-container matColumnDef=\"listen\">\n\t\t\t\t<th mat-header-cell *matHeaderCellDef class=\"app-dictionary--sound\">{{'DICTIONARY.LISTEN' | translate}}\n\t\t\t\t</th>\n\t\t\t\t<td mat-cell *matCellDef=\"let word\" class=\"app-dictionary--sound\">\n\t\t\t\t\t<mat-spinner-button [options]=\"getSpinnerButtonOptions(word)\" (click)=\"playAudio(word)\"\n\t\t\t\t\t\tclass=\"app-dictionary--spinner-btn\">\n\t\t\t\t\t</mat-spinner-button>\n\t\t\t\t</td>\n\t\t\t</ng-container>\n\n\t\t\t<ng-container matColumnDef=\"actions\">\n\t\t\t\t<th mat-header-cell *matHeaderCellDef class=\"app-dictionary--remove\">{{'DICTIONARY.REMOVE' | translate}}\n\t\t\t\t</th>\n\t\t\t\t<td mat-cell *matCellDef=\"let word\" class=\"app-dictionary--remove\">\n\t\t\t\t\t<button mat-raised-button color=\"accent\" (click)=\"removeWordFromDictionary(word)\"\n\t\t\t\t\t\tclass=\"app-dictionary--remove-btn\">{{'DICTIONARY.BUTTON' | translate}}</button>\n\t\t\t\t</td>\n\t\t\t</ng-container>\n\n\t\t\t<tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n\t\t\t<tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\t\t</table>\n\n\t\t<mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100]\" showFirstLastButtons></mat-paginator>\n\t</div>\n\t<div *ngIf=\"dataSource.filteredData.length === 0\"  class=\"app-dictionary--warning\">{{'DICTIONARY.WARNING' | translate}}</div>\n</div>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { of, Observable, Subscription } from 'rxjs';\nimport { interval } from 'rxjs';\nimport { take, delay } from 'rxjs/operators';\nimport { Word } from './word.model';\nimport { ProgressSpinnerMode } from '@angular/material/progress-spinner';\nimport { DataGameService } from './service/data-game.service';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ProfileService } from '../profile/service/profile.service';\nimport { Profile } from '../profile/profile.model';\nimport { getWordsFromLS } from 'src/app/store/action/dictionary.action';\nimport { Store, select } from '@ngrx/store';\nimport { DictionaryState } from 'src/app/store/state/dictionary.state';\nimport { setGameStatus, getNewQuestion } from 'src/app/store/action/game.action';\nimport { selectStatusGame, selectWord, selectAnswers } from 'src/app/store/selectors/game.selectors';\nimport { getRivalProfile, getProfileUserFromLS } from 'src/app/store/action/profile.actions';\nimport { selectRivalProfile, selectUserProfile } from 'src/app/store/selectors/profile.selectors';\n\n@Component({\n\tselector: 'app-game',\n\ttemplateUrl: './game.component.html',\n\tstyleUrls: ['./game.component.scss']\n})\nexport class GameComponent implements OnInit {\n\tpublic gameStatus$: Observable<string> = this._store$.pipe(select(selectStatusGame));\n\tpublic word$: Observable<Word> = this._store$.pipe(select(selectWord));\n\tpublic answers$: Observable<string[]> = this._store$.pipe(select(selectAnswers));\n\tpublic randomRival$: Observable<Profile> = this._store$.pipe(select(selectRivalProfile));\n\tpublic User$: Observable<Profile> = this._store$.pipe(select(selectUserProfile));\n\n\tpublic count: number = null;\n\tpublic sec: number = 1000;\n\tpublic resultDuration: number = 200;\n\tpublic correctAnswer: number = 0;\n\tpublic wrongAnswer: number = 0;\n\tpublic timeRound: number = 30;\n\tpublic arrayForDictionary: Word[] = [];\n\tpublic color: object = {};\n\tpublic selectedAnswer: string = '';\n\tpublic allAnswerRival: number = 30;\n\tpublic correctAnswerRival: number = 0;\n\tpublic wrongAnserRival: number = 0;\n\tpublic resultAllGame: string = null;\n\n\tpublic mode: ProgressSpinnerMode = 'determinate';\n\tpublic valueProgressSpinner: number;\n\tpublic showText: number = this.count;\n\tpublic strokeWidth: number = 15;\n\tpublic diameter: number = 120;\n\n\tconstructor(public dataGameService: DataGameService, private router: Router, public translate: TranslateService,\n\t\tpublic profileService: ProfileService, private _store$: Store<DictionaryState>) {\n\t\ttranslate.addLangs(['en', 'ru']);\n\t\ttranslate.setDefaultLang('en');\n\t\tconst browserLang: any = translate.getBrowserLang();\n\t\ttranslate.use(browserLang.match(/en|ru/) ? browserLang : 'en');\n\t}\n\n\tpublic ngOnInit(): void {\n\t\tthis.profileService.loadAvatarHttp().subscribe(() => {\n\t\t\tthis._store$.dispatch(getProfileUserFromLS({}));\n\t\t\tthis._store$.dispatch(getRivalProfile({}));\n\t\t\tif (typeof this.profileService.getProfileFromLS().id === 'number') {\n\t\t\t\tthis._store$.dispatch(setGameStatus({ gameStatus: 'start' }));\n\t\t\t} else {\n\t\t\t\tthis._store$.dispatch(setGameStatus({ gameStatus: 'profile' }));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic game(): void {\n\t\tthis._store$.dispatch(setGameStatus({ gameStatus: 'game' }));\n\t\tthis._store$.dispatch(getNewQuestion({}));\n\t}\n\n\tpublic checkAnswer(answer: string, index: number): void {\n\t\tthis.word$.pipe(take(1))\n\t\t\t.subscribe((word: Word) => {\n\t\t\t\tif (answer === word.russianWord) {\n\t\t\t\t\tthis.selectedAnswer = 'true';\n\t\t\t\t\tthis.correctAnswer++;\n\t\t\t\t\tthis.color = {\n\t\t\t\t\t\t[index]: {\n\t\t\t\t\t\t\tbackground: 'green'\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedAnswer = 'false';\n\t\t\t\t\tthis.wrongAnswer++;\n\t\t\t\t\tthis.arrayForDictionary.push(word);\n\t\t\t\t\tthis.color = {\n\t\t\t\t\t\t[index]: {\n\t\t\t\t\t\t\tbackground: 'red'\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tof(this.color).pipe(delay(this.resultDuration)).subscribe(() => {\n\t\t\t\t\tthis.color = {};\n\t\t\t\t\tthis.selectedAnswer = '';\n\t\t\t\t});\n\t\t\t\tthis.game();\n\t\t\t});\n\t}\n\n\tpublic startTimer(): void {\n\t\tthis.correctAnswer = 0;\n\t\tthis.wrongAnswer = 0;\n\t\tthis.correctAnswerRival = 0;\n\t\tthis.wrongAnserRival = 0;\n\t\tthis.game();\n\t\tthis.count = this.timeRound;\n\t\tconst newLocal_1: number = 100;\n\t\tthis.valueProgressSpinner = newLocal_1;\n\t\tinterval(this.sec)\n\t\t\t.pipe(\n\t\t\t\ttake(this.timeRound)\n\t\t\t)\n\t\t\t.subscribe((count: number) => {\n\t\t\t\tcount = this.timeRound - (count + 1);\n\t\t\t\tthis.count = count;\n\t\t\t\tconst valueSpinner: number = 100;\n\t\t\t\tthis.valueProgressSpinner = valueSpinner / this.timeRound * count;\n\t\t\t\tif (this.count <= 0) {\n\t\t\t\t\tthis._store$.dispatch(setGameStatus({ gameStatus: 'complete' }));\n\t\t\t\t\tthis.count = null;\n\t\t\t\t\tthis.resultGameRival();\n\t\t\t\t\tthis.resultGame();\n\t\t\t\t\tthis.dataGameService.addWordsDictionary(this.arrayForDictionary);\n\t\t\t\t\tthis._store$.dispatch(getWordsFromLS({}));\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tpublic goToDictionary(pageName: string): void {\n\t\tthis.router.navigate([`${pageName}`]);\n\t}\n\n\tpublic onSaved(): void {\n\t\tthis._store$.dispatch(setGameStatus({ gameStatus: 'start' }));\n\t\tthis._store$.dispatch(getProfileUserFromLS({}));\n\t}\n\n\tpublic resultGameRival(): void {\n\t\tconst minAnswerRival: number = 15;\n\t\tthis.correctAnswerRival = Math.floor(Math.random() * (this.allAnswerRival - minAnswerRival) + minAnswerRival);\n\t\tthis.wrongAnserRival = this.allAnswerRival - this.correctAnswerRival;\n\t}\n\n\tpublic resultGame(): void {\n\t\tconst totalPoints: number = this.correctAnswer - this.wrongAnswer * 2;\n\t\tconst totalPointRival: number = this.correctAnswerRival - this.wrongAnserRival * 2;\n\t\tif (totalPoints > totalPointRival) {\n\t\t\tthis.resultAllGame = 'GAME.RESULT_WIN';\n\t\t} else if (totalPoints < totalPointRival) {\n\t\t\tthis.resultAllGame = 'GAME.RESULT_FAIL';\n\t\t} else {\n\t\t\tthis.resultAllGame = 'GAME.RESULT_DRAW';\n\t\t}\n\t}\n\n}\n","<div class=\"app-game\">\n\t<div *ngIf=\"(gameStatus$ | async) === 'profile'\" class=\"app-game--container-profile\">\n\t\t<app-profile (onSaved)=\"onSaved()\"></app-profile>\n\t</div>\n\n\t<div *ngIf=\"(gameStatus$ | async) === 'start'\" class=\"app-game--container-start\">\n\t\t<button class=\"app-game--btn-start\" (click)=\"startTimer()\">{{'GAME.BUTTON-START' | translate}}</button>\n\t\t<div class=\"app-game--ball\"></div>\n\t</div>\n\t<div *ngIf=\"(gameStatus$ | async) === 'game'\" class=\"app-game--container-game\">\n\t\t<div class=\"app-game--container-avatar\">\n\t\t\t<div>\n\t\t\t\t<div class=\"app-game--avatar\"><img src=\"{{(randomRival$ | async).src}}\"></div>\n\t\t\t\t<p class=\"app-game--nickname\">{{(randomRival$ | async).nickname}}</p>\n\t\t\t</div>\n\t\t\t<div class=\"app-game--spinner\">\n\t\t\t\t<mat-progress-spinner [mode]=\"mode\" [value]=\"valueProgressSpinner\" aria-label=\"showText\"\n\t\t\t\t\t[strokeWidth]=\"strokeWidth\" [diameter]=\"diameter\">\n\t\t\t\t</mat-progress-spinner>\n\n\t\t\t\t<div class=\"app-game--count\">{{count}}</div>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<div class=\"app-game--avatar\"><img src=\"{{(User$ | async ).src}}\"></div>\n\t\t\t\t<p class=\"app-game--nickname\">{{(User$ | async ).nickname}}</p>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"app-game--word-english\">{{(word$ | async).englishWord}}</div>\n\t\t<div class=\"app-game--hidden-content\">\n\t\t\t<img src=\"./assets/img/checkmark.png\" alt=\"checkmark\" class=\"app-game--checkmark\"\n\t\t\t\t[style.display]=\"selectedAnswer === 'true'?'block':'none'\">\n\t\t\t<img src=\"./assets/img/close.svg.png\" alt=\"checkmark\" class=\"app-game--close\"\n\t\t\t\t[style.display]=\"selectedAnswer === 'false'?'block':'none'\">\n\t\t</div>\n\t\t<button mat-stroked-button *ngFor=\"let wordRu of answers$ | async; let i = index\" (click)=\"checkAnswer(wordRu, i)\"\n\t\t\t[ngStyle]=\"color[i]\" class=\"app-game--btn-answer\">{{wordRu}}</button>\n\t</div>\n\t<div *ngIf=\"(gameStatus$ | async) === 'complete'\" class=\"app-game--container-complete\">\n\t\t<div [ngClass]=\"{ win: (resultAllGame === 'GAME.RESULT_WIN')}\">\n\t\t\t<div class=\"app-game--result-game\">\n\t\t\t\t<div class=\"app-game--result-text-complete\" [style.color]=\"resultAllGame === 'GAME.RESULT_WIN'? 'green' : 'red'\">\n\t\t\t\t\t{{resultAllGame | translate}}</div>\n\t\t\t\t<div class=\"app-game--game-outcome\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class=\"app-game--avatar-complete\"><img src=\"{{(randomRival$ | async).src}}\"></div>\n\t\t\t\t\t\t<p class=\"app-game--nickname\">{{(randomRival$ | async).nickname}}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"app-game--result\">\n\t\t\t\t\t\t<p class=\"app-game--answer\">{{'GAME.TRUE-ANSWER' | translate}}:\n\t\t\t\t\t\t\t<span>{{correctAnswerRival}}</span></p>\n\t\t\t\t\t\t<p class=\"app-game--answer\">{{'GAME.WRONG-ANSWER' | translate}}:\n\t\t\t\t\t\t\t<span>{{wrongAnserRival}}</span></p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"app-game--result-text\" [style.color]=\"resultAllGame === 'GAME.RESULT_WIN'? 'green' : 'red'\">\n\t\t\t\t\t{{resultAllGame | translate}}</div>\n\t\t\t\t<div class=\"app-game--game-outcome\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class=\"app-game--avatar-complete\"><img src=\"{{(User$ | async ).src}}\"></div>\n\t\t\t\t\t\t<p class=\"app-game--nickname\">{{(User$ | async ).nickname}}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"app-game--result\">\n\t\t\t\t\t\t<p class=\"app-game--answer\">{{'GAME.TRUE-ANSWER' | translate}}: <span>{{correctAnswer}}</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p class=\"app-game--answer\">{{'GAME.WRONG-ANSWER' | translate}}: <span>{{wrongAnswer}}</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button mat-raised-button color=\"accent\" (click)=\"goToDictionary('/dictionary')\"\n\t\t\t\tclass=\"app-game--btn-complete\">{{'GAME.BUTTON-LEARN' | translate}}</button>\n\t\t\t<button mat-raised-button color=\"primary\" (click)=\"startTimer()\"\n\t\t\t\tclass=\"app-game--btn-complete\">{{'GAME.BUTTON-REPEAT' | translate}}</button>\n\t\t</div>\n\t</div>\n\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { Word } from '../word.model';\n\n@Injectable()\nexport class AudioService {\n\tpublic urlAPI: string = 'https://api.soundoftext.com/sounds';\n\tconstructor(private _http: HttpClient) {\n\t}\n\n\tpublic getAudio(word: string): Observable<any> {\n\t\treturn this._http.post(this.urlAPI, JSON.stringify({ engine: 'Google', data: { text: word, voice: 'en-US' } }),\n\t\t\t{ headers: { 'Content-Type': 'application/json' } })\n\t\t\t.pipe(\n\t\t\t\tmergeMap((items: any) => {\n\t\t\t\t\treturn this._http.get('https://api.soundoftext.com/sounds/' + items.id);\n\t\t\t\t})\n\t\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Word } from '../word.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class DataGameService {\n\n\tprivate static wordsforLearningLSKey: string = 'wordsforLearning';\n\tpublic url: string = './assets/words.json';\n\tpublic words: Word[] = [];\n\tpublic numberOptionsAnswer: number = 3;\n\n\tconstructor(private _httpClient: HttpClient) { }\n\n\tpublic getRandomWord(): Word {\n\t\tconst rand: number = Math.floor(Math.random() * this.words.length);\n\t\tconst randWord: Word = this.words[rand];\n\t\treturn randWord;\n\t}\n\n\tpublic loadWordList(): Observable<Word[]> {\n\t\tconst gettingDataFromLocalStorage: any = localStorage.getItem(DataGameService.wordsforLearningLSKey);\n\t\tif (gettingDataFromLocalStorage) {\n\t\t\tconst wordsStorageString: any = gettingDataFromLocalStorage;\n\t\t\tconst wordsStorage: Word[] = JSON.parse(wordsStorageString);\n\t\t\treturn of(wordsStorage);\n\t\t}\n\t\treturn of([]);\n\t}\n\n\tpublic save(words: Word[]): void {\n\t\tconst dataForLocalSrorageString: string = JSON.stringify(words);\n\t\tlocalStorage.setItem(DataGameService.wordsforLearningLSKey, dataForLocalSrorageString);\n\t}\n\n\tpublic addWordsDictionary(words: Word[]): void {\n\t\tconst gettingDataFromLocalStorage: any = localStorage.getItem(DataGameService.wordsforLearningLSKey);\n\t\tif (gettingDataFromLocalStorage) {\n\t\t\tconst wordsStorageString: any = gettingDataFromLocalStorage;\n\t\t\tconst wordsStorage: Word[] = JSON.parse(wordsStorageString);\n\t\t\twords = words.filter( (value: Word) => {\n\t\t\t\t// tslint:disable-next-line: typedef\n\t\t\t\tconst result = wordsStorage.find((data) => {\n\t\t\t\t\treturn data.id === value.id;\n\t\t\t\t});\n\t\t\t\tif (result) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst dataForLocalSrorageConcat: Word[] = wordsStorage.concat(words);\n\t\t\tconst dataForLocalSrorageString: string = JSON.stringify(dataForLocalSrorageConcat);\n\t\t\tlocalStorage.setItem(DataGameService.wordsforLearningLSKey, dataForLocalSrorageString);\n\t\t} else {\n\t\t\tconst dataForLocalStorage: string = JSON.stringify(words);\n\t\t\tlocalStorage.setItem(DataGameService.wordsforLearningLSKey, dataForLocalStorage);\n\t\t}\n\t}\n\n\tpublic removeWordFromDictionary(word: Word): Observable<any> {\n\t\treturn this.loadWordList().\n\t\t\tpipe(\n\t\t\t\tmap((items: Word[]) => {\n\t\t\t\t\titems = items.filter((item: Word) => item.id !== word.id);\n\t\t\t\t\tthis.save(items);\n\n\t\t\t\t\treturn items;\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tpublic loadWordsHttp(): void {\n\t\tthis._httpClient.get<Word[]>(this.url).subscribe((items: Word[]) => this.words = items);\n\t}\n\n\tpublic getRandomAnswers(word: Word): string[] {\n\t\tconst wordsForArrayAnswer: Set<string> = new Set();\n\t\twordsForArrayAnswer.add(word.russianWord);\n\t\twhile (wordsForArrayAnswer.size < this.numberOptionsAnswer) {\n\t\t\tconst randomRuWord: Word = this.getRandomWord();\n\t\t\twordsForArrayAnswer.add(randomRuWord.russianWord);\n\t\t}\n\t\tconst newLocal: number = 0.5;\n\t\treturn Array.from(wordsForArrayAnswer).sort(() => Math.random() - newLocal);\n\t}\n}\n","export class Word {\n\tpublic id: string;\n\tpublic russianWord: string;\n\tpublic englishWord: string;\n\tpublic isLoading?: boolean = false;\n\n\tconstructor(russianWord?: string, englishWord?: string, id?: string) {\n\t\tthis.russianWord = russianWord;\n\t\tthis.englishWord = englishWord;\n\t\tthis.id = id;\n\t}\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n\tselector: 'app-home',\n\ttemplateUrl: './home.component.html',\n\tstyleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\tconstructor(private router: Router, public translate: TranslateService) {\n\t\ttranslate.addLangs(['en', 'ru']);\n\t\ttranslate.setDefaultLang('en');\n\t\tconst browserLang: any = translate.getBrowserLang();\n\t\ttranslate.use(browserLang.match(/en|ru/) ? browserLang : 'en');\n\t}\n\n\t \tpublic goToGame(pageName: string): void {\n\t\t  this.router.navigate([`${pageName}`]);\n\t\t}\n\n\t}\n","<div class=\"app-home\">\n\t<div class=\"app-home--container\">\n\t<h1 class=\"app-home--title\">{{'HOME.TITLE' | translate}}</h1>\n\t<div class=\"app-home--text\">{{'HOME.TEXT' | translate}}</div>\n\t<button class=\"app-home--button\" (click)=\"goToGame('/game')\">\n\t\t{{'HOME.BUTTON' | translate}}</button>\n\t</div>\n</div>","import { MissingTranslationHandler, MissingTranslationHandlerParams } from '@ngx-translate/core';\n\nexport class MissingTranslationService implements MissingTranslationHandler {\n\tpublic handle (params: MissingTranslationHandlerParams): string {\n\t  return `WARN: '${params.key}' is missing in '${params.translateService.currentLang}' locale`;\n\t}\n  }\n","import { Component } from '@angular/core';\nimport { DataGameService } from '../game/service/data-game.service';\nimport { Word } from '../game/word.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { select, Store } from '@ngrx/store';\nimport { selectDictionaryCount } from 'src/app/store/selectors/dictionary.selectors';\nimport { DictionaryState } from 'src/app/store/state/dictionary.state';\n\n@Component({\n\tselector: 'app-menu',\n\ttemplateUrl: './menu.component.html',\n\tstyleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent {\n\tpublic dictionary: Word[] = [];\n\tpublic numberWordsInDictionary: number = null;\n\tpublic dictionaryCount$: Observable<number> = this._store$.pipe(select(selectDictionaryCount));\n\n\tconstructor(public dataGameService: DataGameService, public translate: TranslateService, public _store$: Store<DictionaryState>) {\n\t\ttranslate.addLangs(['en', 'ru']);\n\t\ttranslate.setDefaultLang('en');\n\t\tconst browserLang: any = translate.getBrowserLang();\n\t\ttranslate.use(browserLang.match(/en|ru/) ? browserLang : 'en');\n\t}\n\n}\n","<div class=\"app-menu\">\n\t<div class=\"app-menu--container\">\n\t<div class=\"app-menu--navigate\">\n\t\t<a routerLink=\"\" class=\"app-menu--link\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:true}\">{{'MENU.HOME' | translate}}</a>\n\t\t<a routerLink=\"/game\" class=\"app-menu--link\" routerLinkActive=\"active-link\">{{'MENU.GAME' | translate}}</a>\n\t\t<a routerLink=\"/dictionary\" class=\"app-menu--link\" routerLinkActive=\"active-link\"> <span matBadge=\"{{dictionaryCount$ | async}}\" matBadgeOverlap=\"false\">{{'MENU.DICTIONARY' | translate}}</span></a>\n\t\t<a routerLink=\"/translate\" class=\"app-menu--link\" routerLinkActive=\"active-link\">{{'MENU.TRANSLATOR' | translate}}</a> \n\t\t<a routerLink=\"/about-me\" class=\"app-menu--link\" routerLinkActive=\"active-link\">{{'MENU.ABOUT ME' | translate}}</a>\n\t</div>\n\t<div class=\"app-menu--mat-menu\">\n\t\t<button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n\t\t\t<mat-icon>more_vert</mat-icon>\n\t\t  </button>\n\t\t  <mat-menu #menu=\"matMenu\">\n\t\t\t<button mat-menu-item [routerLink] = \"['/']\">\n\t\t\t  <mat-icon>home</mat-icon>\n\t\t\t  <span>{{'MENU.HOME' | translate}}</span>\n\t\t\t</button>\n\t\t\t<button mat-menu-item [routerLink] = \"['/game']\">\n\t\t\t  <mat-icon>gamepad</mat-icon>\n\t\t\t  <span>{{'MENU.GAME' | translate}}</span>\n\t\t\t</button>\n\t\t\t<button mat-menu-item [routerLink] = \"['/dictionary']\">\n\t\t\t  <mat-icon>menu_book</mat-icon>\n\t\t\t  <span>{{'MENU.DICTIONARY' | translate}}</span>\n\t\t\t</button>\n\t\t\t<button mat-menu-item [routerLink] = \"['/translate']\">\n\t\t\t\t<mat-icon>search</mat-icon>\n\t\t\t\t<span>{{'MENU.TRANSLATOR' | translate}}</span>\n\t\t\t  </button>\n\t\t\t  <button mat-menu-item [routerLink] = \"['/about-me']\">\n\t\t\t\t<mat-icon>person_outline</mat-icon>\n\t\t\t\t<span>{{'MENU.ABOUT ME' | translate}}</span>\n\t\t\t  </button>\n\t\t  </mat-menu>\n\t</div>\n\t<div class=\"app-menu--toggle-button\">\n\t    <mat-button-toggle-group #langSelect=\"matButtonToggleGroup\" (change)=\" translate.use(langSelect.value)\">\n\t\t\t\t<mat-button-toggle *ngFor=\"let lang of translate.getLangs()\" [value]=\"lang\" [checked]=\"lang === translate.currentLang\" >{{lang==\"ru\"?\"🇷🇺\":\"🇬🇧\"}}</mat-button-toggle>\n\t\t\t  </mat-button-toggle-group> \n\t</div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent {\n\n\tconstructor(public translate: TranslateService) {\n\t\ttranslate.addLangs(['en', 'ru']);\n\t\ttranslate.setDefaultLang('en');\n\t\tconst browserLang: any = translate.getBrowserLang();\n\t\ttranslate.use(browserLang.match(/en|ru/) ? browserLang : 'en');\n\t}\n\n  public back(): void {\n\twindow.history.back();\n  }\n}\n","<div class=\"app-not-found\">\n\t<div class=\"app-not-found--container\">\n\t\t<div class=\"app-not-found--info\">\n\t\t<p class=\"app-not-found--number\">404</p>\n\t\t<p class=\"app-not-found--text\">{{'NOTFOUND.TEXT' | translate}}</p>\n\t\t<button mat-stroked-button (click)=\"back()\" class=\"app-not-found--btn\">{{'NOTFOUND.BUTTON' | translate}}</button>\n\t  </div>\n\t\t<img src=\"./assets/img/404.png\" class=\"app-not-found--img\">\n\t</div>\n</div>","import { Component, Output, EventEmitter } from '@angular/core';\nimport { ProfileService } from './service/profile.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Store } from '@ngrx/store';\nimport { Profile } from './profile.model';\nimport { saveProfileUser } from 'src/app/store/action/profile.actions';\n\n@Component({\n\tselector: 'app-profile',\n\ttemplateUrl: './profile.component.html',\n\tstyleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent {\n\tpublic nickname: string = null;\n\tpublic idAvatar: number = null;\n\n\t@Output() public onSaved: EventEmitter<any> = new EventEmitter();\n\n\tconstructor(public profileService: ProfileService, public translate: TranslateService, private _store: Store) {\n\t\ttranslate.addLangs(['en', 'ru']);\n\t\ttranslate.setDefaultLang('en');\n\t\tconst browserLang: any = translate.getBrowserLang();\n\t\ttranslate.use(browserLang.match(/en|ru/) ? browserLang : 'en');\n\t}\n\n\tpublic getIdAvatar(data: number): void {\n\t\tthis.idAvatar = data;\n\t}\n\n\tpublic save(nickname: string, idAvatar: number): void {\n\tconst profile: Profile = new Profile();\n\tprofile.nickname = nickname;\n\tprofile.id = idAvatar;\n\tthis._store.dispatch(saveProfileUser({profile}));\n\t\tthis.onSaved.emit();\n\t}\n\n}\n","<div class=\"app-profile\"> \n\t<p class=\"app-profile--text\">{{'PROFILE.TITLE' | translate}}</p>\n\t<mat-form-field class=\"example-form-field\">\n\t\t<mat-label>{{'PROFILE.MAT-LABEL' | translate}}</mat-label>\n\t\t<input matInput type=\"text\" [(ngModel)]=\"nickname\" #xxx = \"ngModel\" required>\n\t\t<button mat-button *ngIf=\"nickname\" matSuffix mat-icon-button (click)=\"nickname=''\" class=\"app-profile--button-close\">\n\t\t  <mat-icon>close</mat-icon>\n\t\t</button>\n\t  </mat-form-field>\n\t<div class=\"app-profile--container\">\n\t\t<button *ngFor=\"let avatar of profileService.avatars\" class=\"app-profile--button-avatar\" (click)=\"getIdAvatar(avatar.id)\"><img src=\"{{avatar.src}}\" class=\"app-profile--avatar\"></button>\n   </div>\n   <button mat-raised-button color=\"primary\" (click)=\"save(nickname, idAvatar)\" [disabled]=\"xxx.invalid || !idAvatar\" class=\"app-profile--button-done\" >{{'PROFILE.BUTTON' | translate}}</button>\n</div>","export class Profile {\n\tpublic id?: number;\n\tpublic src?: string;\n\tpublic nickname?: string;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Profile } from '../profile.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n@Injectable()\nexport class ProfileService {\n\n\tprivate static profileKeyLS: string = 'profileKeyLS';\n\tpublic baseURL: string = './assets/avatars.json';\n\tpublic avatars: Profile[] = [];\n\tpublic nicknameRival: any = ['Саша', 'Женя', 'Знаток', 'Учитель'];\n\tconstructor(private _http: HttpClient) { }\n\tpublic loadAvatarHttp(): Observable<Profile[]> {\n\t\treturn this._http.get<Profile[]>(this.baseURL).pipe(\n\t\t\tmap((items: Profile[]) => {\n\t\t\t\tthis.avatars = items;\n\n\t\t\t\treturn items;\n\t\t\t})\n\t\t);\n\t}\n\tpublic saveProfile(userName: string, idAvatar: number): void {\n\t\tconst dataUser: Profile = {\n\t\t\tnickname: userName,\n\t\t\tid: idAvatar\n\t\t};\n\t\tconst dataUserLS: string = JSON.stringify(dataUser);\n\t\tlocalStorage.setItem(ProfileService.profileKeyLS, dataUserLS);\n\t}\n\n\tpublic getProfileFromLS(): Profile {\n\t\tconst gettingDataFromLocalStorage: any = localStorage.getItem(ProfileService.profileKeyLS);\n\t\tif (gettingDataFromLocalStorage) {\n\t\t\tconst datafromStorage: Profile = JSON.parse(gettingDataFromLocalStorage);\n\t\t\tconst foundElement: Profile = this.avatars.find((data: Profile) => data.id === datafromStorage.id);\n\t\t\tdatafromStorage.src = foundElement.src;\n\t\t\treturn datafromStorage;\n\t\t}\n\n\t\treturn new Profile();\n\t}\n\n\tpublic getRandomUser(): Profile {\n\t\tconst rand: number = Math.floor(Math.random() * this.avatars.length);\n\t\tconst randNickname: number = Math.floor(Math.random() * this.nicknameRival.length);\n\t\tconst profile: Profile = new Profile();\n\t\tprofile.src = this.avatars[rand].src;\n\t\tprofile.nickname = this.nicknameRival[randNickname];\n\t\treturn profile;\n\t}\n}\n","import { APIYandex } from './apiYandex.model';\n\nexport class FullTranslation {\n\tpublic translate: string[];\n\tpublic transcription: string;\n\tpublic example: string[];\n\n\tpublic parseTranslation(data: APIYandex.RootObject): any {\n\t\tif (data.def.length === 0) {\n\t\t\tthrow new Error('word not found');\n\t\t}\n\t\tthis.translate = data.def[0].tr.map((item: APIYandex.Tr) => item.text);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { APIYandex } from '../apiYandex.model';\nimport { FullTranslation } from '../fullTranslator.model';\n\n@Injectable()\nexport class DataService {\n\tpublic urlAPI: string = 'https://dictionary.yandex.net/api/v1/dicservice.json/lookup?key=';\n\tpublic mainAPIKey: string = 'dict.1.1.20200609T214032Z.bb7f13f95e75ccf2.de79d0d2a909a5510ae3147dde13ba2f0d3f1dd8';\n\tpublic langRU: string = 'ru-en';\n\tpublic langEN: string = 'en-ru';\n\n\tconstructor(private _http: HttpClient) { }\n\n\tpublic translateWord(data: string, lang: string): Observable<FullTranslation> {\n\t\tconst url: string = `${this.urlAPI}${this.mainAPIKey}&lang=${lang}&text=${data}`;\n\t\treturn this._http.post(url, null).pipe(\n\t\t\tmap((items: APIYandex.RootObject) => {\n\t\t\t\tconst translation: FullTranslation = new FullTranslation();\n\t\t\t\ttranslation.parseTranslation(items);\n\t\t\t\treturn translation;\n\t\t\t}));\n\t}\n}\n","import { Component } from '@angular/core';\nimport { TranslateState } from 'src/app/store/state/translate.state';\nimport { Store, select } from '@ngrx/store';\nimport { translate, resultTranslate } from 'src/app/store/action/translate.action';\nimport { selectError, selectWordTranslate } from 'src/app/store/selectors/translate.selectors';\nimport { Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n\tselector: 'app-translator',\n\ttemplateUrl: './translator.component.html',\n\tstyleUrls: ['./translator.component.scss']\n})\n\nexport class TranslatorComponent {\n\tpublic wordTranslate$: Observable<string[]> = this._store$.pipe(select(selectWordTranslate));\n\tpublic error$: Observable<string> = this._store$.pipe(select(selectError));\n\tpublic word: string;\n\tpublic lang: string = 'ru-en';\n\t// tslint:disable-next-line: no-shadowed-variable\n\tconstructor(public _store$: Store<TranslateState>, public translate: TranslateService) {\n\t\ttranslate.addLangs(['en', 'ru']);\n\t\ttranslate.setDefaultLang('en');\n\t\tconst browserLang: any = translate.getBrowserLang();\n\t\ttranslate.use(browserLang.match(/en|ru/) ? browserLang : 'en');\n\t}\n\n\tpublic translateWord(): void {\n\t\treturn this._store$.dispatch(translate({ word: this.word, lang: this.lang}));\n\t}\n\n\tpublic onTitleChange(): void {\n\t\tif (this.word.length === 0) {\n\t\t\treturn this._store$.dispatch(resultTranslate({ wordTranslate: [] }));\n\t\t}\n\t}\n\n\tpublic changeLang(): void {\n\t\tif (this.lang === 'ru-en') {\n\t\t\tthis.lang = 'en-ru';\n\t\t} else {\n\t\t\tthis.lang = 'ru-en';\n\t\t}\n\t}\n}\n","\n<div class=\"app-translator\">\n\t<div class=\"app-translator--container\">\n\t\t<div class=\"app-translator--translate\">\n\t\t\t<div class=\"app-translator--lang\">{{(lang === 'ru-en'?'TRANSLATOR.RU':'TRANSLATOR.EN') | translate}}</div>\n\t\t\t<div class=\"app-translator--arrows\" (click)=\"changeLang()\"><span class=\"material-icons\">\n\t\t\t\tsync_alt\n\t\t\t\t</span></div>\n\t\t\t<div class=\"app-translator--lang\">{{(lang === 'ru-en'?'TRANSLATOR.EN':'TRANSLATOR.RU') | translate}}</div>\n\t\t</div>\n\n\t\t<div class=\"app-translator--text\">\n\t\t\t<div class=\"app-translator--form\">\n\t\t\t\t<form class=\"app-translator--form\" (keyup.enter) =\"translateWord()\">\n\t\t\t\t\t<input placeholder=\"{{'TRANSLATOR.EXAMPLE' | translate}}\" \n\t\t\t\t\t\t[(ngModel)]=\"word\" type=\"text\" name=\"wordTranslate\" (ngModelChange)=\"onTitleChange()\"\n\t\t\t\t\t\tclass=\"app-translator--input\">\n\t\t\t\t\t<button mat-button *ngIf=\"word\" matSuffix mat-icon-button aria-label=\"Clear\"\n\t\t\t\t\t\t(click)=\"word=''; onTitleChange()\" class=\"app-translator--button\" type=\"button\" class=\"app-translator--btn\">\n\t\t\t\t\t\t<mat-icon>close</mat-icon>\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t<div class=\"app-translator--answer\">\n\t\t<div >{{(wordTranslate$ | async)[0]}}</div>\n\t\t\t<div *ngIf= \"error$ | async\">\n\t\t\t\t{{error$ | async}}</div>\n\t\t</div>\n\t</div>\n</div>\n<div class=\"ball\"></div>\n</div>\n\n","import { createAction, props } from '@ngrx/store';\nimport { NotAllowedCheck, TypedAction, ActionCreator, Action } from '@ngrx/store/src/models';\nimport { Word } from 'src/app/components/game/word.model';\n\ntype TypeActionCreator<S extends string, O extends object> = ActionCreator<\n\tS, (props: O & NotAllowedCheck<O>) => & TypedAction<S>\n>;\n\nexport interface CustomAction extends Action {\n\tdictionary: Word[];\n\tword: Word;\n\tisLoading: boolean;\n\tsrc: string;\n}\n\nexport const getWordsFromLS: TypeActionCreator<string, {}> = createAction(\n\t'[Dictionary] get words from LS',\n);\n\nexport const setWordsFromLS: TypeActionCreator<string, { dictionary: Word[] }> = createAction(\n\t'[Dictionary] set words from LS',\n\tprops<{dictionary: Word[]}>()\n);\n\nexport const removeWordFromDictionary: TypeActionCreator<string, { word: Word }> = createAction(\n\t'[Dictionary] remove word from dictionary',\n\tprops<{word: Word}>()\n);\n\nexport const changeWordStatus: TypeActionCreator<string, { word: Word, isLoading: boolean }> = createAction(\n\t'[Dictionary] change status word',\n\tprops<{word: Word, isLoading: boolean}>()\n);\n\nexport const getAudioSrc: TypeActionCreator<string, { word: Word }> = createAction(\n\t'[Dictionary] get audio src',\n\tprops<{word: Word}>()\n);\n\nexport const setAudioSrc: TypeActionCreator<string, {word: Word, src: string }> = createAction(\n\t'[Dictionary] set audio src',\n\tprops<{word: Word, src: string}>()\n);\n","import { createAction, props } from '@ngrx/store';\nimport { NotAllowedCheck, TypedAction, ActionCreator } from '@ngrx/store/src/models';\nimport {  Action } from '@ngrx/store';\nimport { Word } from 'src/app/components/game/word.model';\n\ntype TypeActionCreator<S extends string, O extends object> = ActionCreator<\n\tS, (props: O & NotAllowedCheck<O>) => & TypedAction<S>\n>;\n\nexport interface CustomAction extends Action {\n\tgameStatus: string;\n\tword: Word;\n\tanswers: string[];\n}\n\nexport const setGameStatus: TypeActionCreator<string, { gameStatus: string} > = createAction(\n\t'[Game] set game status',\n\t props<{gameStatus: string}>()\n);\n\nexport const getNewQuestion: TypeActionCreator<string, {} > = createAction(\n\t'[Game] get words for game',\n);\n\nexport const setNewQuestion: TypeActionCreator<string, { word: Word, answers: string[]} > = createAction(\n\t'[Game] set words for game',\n\tprops<{word: Word, answers: string[]}>()\n);\n","import { createAction, props } from '@ngrx/store';\nimport { NotAllowedCheck, TypedAction, ActionCreator } from '@ngrx/store/src/models';\nimport { Action } from '@ngrx/store';\nimport { Profile } from 'src/app/components/profile/profile.model';\n\ntype TypeActionCreator<S extends string, O extends object> = ActionCreator<\n\tS, (props: O & NotAllowedCheck<O>) => & TypedAction<S>\n>;\n\nexport interface CustomAction extends Action {\n\tprofile: Profile;\n}\n\nexport const saveProfileUser: TypeActionCreator<string, { profile: Profile }> = createAction(\n\t'[Profile] save profile user',\n\tprops<{ profile: Profile }>()\n);\n\nexport const setProfileUser: TypeActionCreator<string, { profile: Profile }> = createAction(\n\t'[Profile] set profile user',\n\tprops<{ profile: Profile }>()\n);\n\nexport const getProfileUserFromLS: TypeActionCreator<string, {}> = createAction(\n\t'[Profile] get profile user from LS'\n);\n\nexport const getRivalProfile: TypeActionCreator<string, {}> = createAction(\n\t'[Profile] get profile rival',\n);\n\nexport const setRivalProfile: TypeActionCreator<string, { profile: Profile }> = createAction(\n\t'[Profile] set profile rival',\n\tprops<{ profile: Profile }>()\n);\n","import { createAction, props } from '@ngrx/store';\nimport { NotAllowedCheck, TypedAction, ActionCreator } from '@ngrx/store/src/models';\nimport { Action } from '@ngrx/store';\n\ntype TypeActionCreator<S extends string, O extends object> = ActionCreator<\n\tS, (props: O & NotAllowedCheck<O>) => & TypedAction<S>\n>;\n\nexport interface CustomAction extends Action {\n\twordTranslate: string[];\n\tword: string;\n\tlang: string;\n\terror: string;\n}\n\nexport const translate: TypeActionCreator<string, { word: string, lang: string }> = createAction(\n\t'[Translate] translate word',\n\tprops<{ word: string, lang: string }>()\n);\n\nexport const resultTranslate: TypeActionCreator<string, { wordTranslate: string[]}> = createAction(\n\t'[Translate] result translate',\n\tprops<{wordTranslate: string[]}>()\n);\n\nexport const error: TypeActionCreator<string, { error: string}> = createAction(\n\t'[Translate] error translate',\n\tprops<{error: string}>()\n);\n","import { Injectable } from '@angular/core';\nimport { ofType, createEffect, Actions } from '@ngrx/effects';\nimport { mergeMap, map, tap } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { TypedAction } from '@ngrx/store/src/models';\nimport { DataGameService } from 'src/app/components/game/service/data-game.service';\nimport { getWordsFromLS, setWordsFromLS, removeWordFromDictionary, CustomAction, setAudioSrc, getAudioSrc } from '../action/dictionary.action';\nimport { Word } from 'src/app/components/game/word.model';\nimport { AudioService } from 'src/app/components/game/service/audio.service';\n\n@Injectable()\nexport class DictionaryEffects {\n\tpublic getWordsFromLS$: Observable<TypedAction<string>> = createEffect(\n\t\t() => this.actions$.pipe(\n\t\t\tofType(getWordsFromLS),\n\t\t\tmergeMap(() => this.dataGameService.loadWordList()\n\t\t\t\t.pipe(\n\t\t\t\t\tmap((dictionary: Word[]) => {\n\t\t\t\t\t\treturn setWordsFromLS({ dictionary });\n\t\t\t\t\t})\n\t\t\t\t\t/* \tcatchError(() => of({ type: '[Todo] Todos Loaded Error' })) */\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\tpublic removeWord$: Observable<TypedAction<string>> = createEffect(\n\t\t() => this.actions$.pipe(\n\t\t\tofType(removeWordFromDictionary),\n\t\t\tmergeMap((action: CustomAction) => this.dataGameService.removeWordFromDictionary(action.word)\n\t\t\t\t.pipe(\n\t\t\t\t\tmap((dictionary: Word[]) => {\n\t\t\t\t\t\treturn setWordsFromLS({ dictionary });\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\tpublic playAudio$: Observable<TypedAction<string>> = createEffect(\n\t\t() => this.actions$.pipe(\n\t\t\tofType(getAudioSrc),\n\t\t\tmergeMap((action: CustomAction) => this.audioService.getAudio(action.word.englishWord)\n\t\t\t\t.pipe(\n\t\t\t\t\tmap((data: any) => {\n\t\t\t\t\t\treturn setAudioSrc({ word: action.word, src: data.location });\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\tconstructor(\n\t\tprivate actions$: Actions,\n\t\tprivate dataGameService: DataGameService,\n\t\tprivate audioService: AudioService\n\t) { }\n}\n","import { Injectable } from '@angular/core';\nimport { ofType, createEffect, Actions } from '@ngrx/effects';\nimport { mergeMap, map } from 'rxjs/operators';\nimport { Observable, of, } from 'rxjs';\nimport { TypedAction } from '@ngrx/store/src/models';\nimport { CustomAction } from '../action/profile.actions';\nimport { DataGameService } from 'src/app/components/game/service/data-game.service';\nimport { getNewQuestion, setNewQuestion } from '../action/game.action';\nimport { Word } from 'src/app/components/game/word.model';\n\n@Injectable()\nexport class GameEffects {\n\tpublic getNewQuestion$: Observable<TypedAction<string>> = createEffect(\n\t\t() => this.actions$.pipe(\n\t\t\tofType(getNewQuestion),\n\t\t\tmergeMap(() => of(1)\n\t\t\t\t.pipe(\n\t\t\t\t\tmap(() => {\n\t\t\t\t\t\tconst word: Word = this.dataGameService.getRandomWord();\n\t\t\t\t\t\tconst answers: string[] = this.dataGameService.getRandomAnswers(word);\n\t\t\t\t\t\treturn setNewQuestion({word, answers});\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\tconstructor(\n\t\tprivate actions$: Actions,\n\t\tprivate dataGameService: DataGameService\n\t) { }\n}\n","import { Injectable } from '@angular/core';\nimport { ofType, createEffect, Actions } from '@ngrx/effects';\nimport { mergeMap, map } from 'rxjs/operators';\nimport { Observable, of, } from 'rxjs';\nimport { TypedAction } from '@ngrx/store/src/models';\nimport { setProfileUser, saveProfileUser, getProfileUserFromLS, getRivalProfile, setRivalProfile } from '../action/profile.actions';\nimport { ProfileService } from 'src/app/components/profile/service/profile.service';\nimport { CustomAction } from '../action/profile.actions';\nimport { Profile } from 'src/app/components/profile/profile.model';\n\n@Injectable()\nexport class ProfileEffects {\n\tpublic saveProfileUser$: Observable<TypedAction<string>> = createEffect(\n\t\t() => this.actions$.pipe(\n\t\t\tofType(saveProfileUser),\n\t\t\tmergeMap((action: CustomAction) => of(this.profileService.saveProfile(action.profile.nickname, action.profile.id))\n\t\t\t\t.pipe(\n\t\t\t\t\tmap(() => {\n\t\t\t\t\t\treturn getProfileUserFromLS({});\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\tpublic getProfileUserFromLS$: Observable<TypedAction<string>> = createEffect(\n\t\t() => this.actions$.pipe(\n\t\t\tofType(getProfileUserFromLS),\n\t\t\tmergeMap(() => of(this.profileService.getProfileFromLS())\n\t\t\t\t.pipe(\n\t\t\t\t\tmap((profile: Profile) => {\n\t\t\t\t\t\treturn setProfileUser({ profile });\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\tpublic getRivalProfile$: Observable<TypedAction<string>> = createEffect(\n\t\t() => this.actions$.pipe(\n\t\t\tofType(getRivalProfile),\n\t\t\tmergeMap(() => of(this.profileService.getRandomUser())\n\t\t\t\t.pipe(\n\t\t\t\t\tmap((profile: Profile) => {\n\t\t\t\t\t\treturn setRivalProfile({ profile });\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\tconstructor(\n\t\tprivate actions$: Actions,\n\t\tprivate profileService: ProfileService\n\t) { }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\nimport { mergeMap, map, catchError} from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { DataService } from 'src/app/components/translator/service/data.service';\nimport { translate, resultTranslate, CustomAction, error } from '../action/translate.action';\nimport { TypedAction } from '@ngrx/store/src/models';\nimport { FullTranslation } from 'src/app/components/translator/fullTranslator.model';\n\n@Injectable()\nexport class TranslateEffects {\n\n\t\tpublic translate$: Observable<TypedAction<string>> = createEffect(\n\t\t\t() => this.actions$.pipe(\n\t\t\t\tofType(translate),\n\t\t\t\tmergeMap((action: CustomAction) => this.dataService.translateWord(action.word, action.lang)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tmap((data: FullTranslation) => {\n\t\t\t\t\t\t\treturn resultTranslate({ wordTranslate: data.translate});\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tcatchError((e: Error) => of(error({ error: e.message})))\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t)\n\t\t);\n\tconstructor(\n\t\tprivate actions$: Actions,\n\t\tprivate dataService: DataService,\n\t) { }\n\n}\n","import { ActionReducerMap } from '@ngrx/store';\nimport { TranslateState, featureKeyTranslate } from './state/translate.state';\nimport { StateReducerTranslate } from './reducer/translate.reducer';\nimport { StateReducerDictionary } from './reducer/dictionary.reducer';\nimport { featureKeyDictionary, DictionaryState } from './state/dictionary.state';\nimport { featureKeyGame, GameState } from './state/game.state';\nimport { StateReducerGame } from './reducer/game.reducer';\nimport { ProfileState, featureKeyProfile } from './state/profile.state';\nimport { StateReducerProfile } from './reducer/profile.reducers';\n\nexport interface IAppState {\n[featureKeyTranslate]: TranslateState;\n[featureKeyDictionary]: DictionaryState;\n[featureKeyGame]: GameState;\n[featureKeyProfile]: ProfileState;\n\n}\n\nexport const reducer: ActionReducerMap<IAppState> = {\n[featureKeyTranslate]: StateReducerTranslate,\n[featureKeyDictionary]: StateReducerDictionary,\n[featureKeyGame]: StateReducerGame,\n[featureKeyProfile]: StateReducerProfile,\n};\n","import { initialState } from '../state/dictionary.state';\nimport { createReducer, on, Action, ActionReducer } from '@ngrx/store';\nimport * as DictionaryAction from '../action/dictionary.action';\nimport { DictionaryState } from '../state/dictionary.state';\nimport { Word } from 'src/app/components/game/word.model';\n\nexport const dictionaryReducer: ActionReducer<DictionaryState, Action> = createReducer(\n\tinitialState,\n\ton(DictionaryAction.setWordsFromLS, (state: DictionaryState, action: DictionaryAction.CustomAction): DictionaryState => {\n\t\treturn {\n\t\t\t...state,\n\t\t\tdictionary: action.dictionary\n\t\t};\n\n\t}),\n\ton(DictionaryAction.changeWordStatus, (state: DictionaryState, action: DictionaryAction.CustomAction): DictionaryState => {\n\t\treturn {\n\t\t\t...state,\n\t\t\tdictionary: state.dictionary.map((item: Word) => {\n\t\t\t\tif (item.id === action.word.id) {\n\t\t\t\t\treturn { ...item, isLoading: action.isLoading };\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t})\n\t\t};\n\n\t}),\n\n\ton(DictionaryAction.setAudioSrc, (state: DictionaryState, action: DictionaryAction.CustomAction): DictionaryState => {\n\t\treturn {\n\t\t\t...state,\n\t\t\tsrcAudio: {src: action.src, word: action.word}\n\t\t};\n\n\t}),\n\n);\n\nexport function StateReducerDictionary(state: DictionaryState | undefined, action: Action): DictionaryState {\n\treturn dictionaryReducer(state, action);\n}\n","import { initialState } from '../state/game.state';\nimport { createReducer, on, Action, ActionReducer } from '@ngrx/store';\nimport * as GameAction from '../action/game.action';\nimport { GameState } from '../state/game.state';\n\nexport const gameReducer: ActionReducer<GameState, Action> = createReducer(\n\n\tinitialState,\n\ton(GameAction.setGameStatus, (state: GameState, action: GameAction.CustomAction): GameState => {\n\t\treturn ({\n\t\t\t...state,\n\t\t\tgameStatus: action.gameStatus\n\t\t});\n\t}),\n\n\ton(GameAction.setNewQuestion, (state: GameState, action: GameAction.CustomAction): GameState => {\n\t\treturn ({\n\t\t\t...state,\n\t\t\tword: action.word,\n\t\t\tanswers: action.answers\n\t\t});\n\t}),\n);\n\nexport function StateReducerGame(state: GameState | undefined, action: Action): GameState {\n\treturn gameReducer(state, action);\n}\n","import { initialState, ProfileState } from '../state/profile.state';\nimport { createReducer, on, Action, ActionReducer } from '@ngrx/store';\nimport * as ProfileAction from '../action/profile.actions';\n\nexport const profileReducer: ActionReducer<ProfileState, Action> = createReducer(\n\tinitialState,\n\ton(ProfileAction.setProfileUser, (state: ProfileState, action: ProfileAction.CustomAction): ProfileState => {\n\t\treturn ({\n\t\t\t...state,\n\t\t\tuserProfile: action.profile\n\t\t});\n\t}),\n\ton(ProfileAction.setRivalProfile, (state: ProfileState, action: ProfileAction.CustomAction): ProfileState => {\n\t\treturn ({\n\t\t\t...state,\n\t\t\trivalProfile: action.profile\n\t\t});\n\t}),\n\n);\n\nexport function StateReducerProfile(state: ProfileState | undefined, action: Action): ProfileState {\n\treturn profileReducer(state, action);\n}\n","import { initialState} from '../state/translate.state';\nimport { createReducer, on, Action, ActionReducer } from '@ngrx/store';\nimport * as TranslateAction from '../action/translate.action';\nimport { TranslateState } from '../state/translate.state';\n\nexport const translateReducer: ActionReducer<TranslateState, Action> = createReducer(\n\tinitialState,\n\ton(TranslateAction.resultTranslate, (state: TranslateState, action: TranslateAction.CustomAction): TranslateState => {\n\t\treturn {\n\t\t\t...state,\n\t\t\terror: '',\n\t\t\twordTranslate: action.wordTranslate\n\t\t};\n\n\t}),\n\ton(TranslateAction.error, (state: TranslateState, action: TranslateAction.CustomAction): TranslateState => {\n\t\treturn {\n\t\t\t...state,\n\t\t\terror: action.error\n\t\t};\n\n\t}),\n\n);\n\nexport function StateReducerTranslate(state: TranslateState | undefined, action: Action): TranslateState {\n\treturn translateReducer(state, action);\n}\n","import { createFeatureSelector, createSelector, MemoizedSelector } from '@ngrx/store';\nimport { featureKeyDictionary, DictionaryState } from '../state/dictionary.state';\n\nexport const selectStateDictionary: MemoizedSelector<object, DictionaryState> =\n createFeatureSelector<DictionaryState>(featureKeyDictionary);\n\n// tslint:disable-next-line: max-line-length\nexport const selectDictionary: any = createSelector(selectStateDictionary, (state: DictionaryState) => state.dictionary);\n// tslint:disable-next-line: max-line-length\nexport const selectDictionaryCount: any = createSelector(selectStateDictionary, (state: DictionaryState) => state.dictionary.length);\n\nexport const selectSrcAudio: any = createSelector(selectStateDictionary, (state: DictionaryState) => state.srcAudio);\n","import { createFeatureSelector, createSelector} from '@ngrx/store';\nimport { GameState, featureKeyGame } from '../state/game.state';\nimport { Word } from 'src/app/components/game/word.model';\n\nexport const selectGameFeature: any = createFeatureSelector<GameState>(featureKeyGame);\nexport const selectStatusGame: any = createSelector(\n\tselectGameFeature,\n\t(state: GameState): string => state.gameStatus\n);\n\nexport const selectWord: any = createSelector(\n\tselectGameFeature,\n\t(state: GameState): Word => state.word\n);\n\nexport const selectAnswers: any = createSelector(\n\tselectGameFeature,\n\t(state: GameState): string[] => state.answers\n);\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { featureKeyProfile, ProfileState } from '../state/profile.state';\n\nexport const selectStateProfile: any = createFeatureSelector<ProfileState>(featureKeyProfile);\n\nexport const selectRivalProfile: any = createSelector(selectStateProfile, (state: ProfileState) => state.rivalProfile);\n\nexport const selectUserProfile: any = createSelector(selectStateProfile, (state: ProfileState) => state.userProfile);\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { TranslateState, featureKeyTranslate } from '../state/translate.state';\n\nexport const selectStateTranslate: any = createFeatureSelector<TranslateState>(featureKeyTranslate);\n\n// tslint:disable-next-line: max-line-length\nexport const selectWordTranslate: any = createSelector(selectStateTranslate, (state: TranslateState) => state.wordTranslate);\n// tslint:disable-next-line: max-line-length\nexport const selectWord: any = createSelector(selectStateTranslate, (state: TranslateState) => state.word);\n\nexport const selectError: any = createSelector(selectStateTranslate, (state: TranslateState) => state.error);\n","import { Word } from 'src/app/components/game/word.model';\n\nexport interface DictionaryState {\n\tdictionary: Word[];\n\tsrcAudio: object;\n}\n\nexport const featureKeyDictionary: 'DICTIONARY' = 'DICTIONARY';\n\nexport const initialState: DictionaryState = {\n\tdictionary: [],\n\tsrcAudio: {}\n};\n","import { Word } from 'src/app/components/game/word.model';\n\nexport interface GameState {\n\tgameStatus: string;\n\tword: Word;\n\tanswers: string[];\n}\n\nexport const featureKeyGame: 'GAME' = 'GAME';\n\nexport const initialState: GameState = {\n\tgameStatus: 'profile',\n\tword: new Word(),\n\tanswers: []\n};\n","import { Profile } from 'src/app/components/profile/profile.model';\n\nexport interface ProfileState {\n\tuserProfile: Profile;\n\trivalProfile: Profile;\n\n}\n\nexport const featureKeyProfile: 'PROFILE' = 'PROFILE';\n\nexport const initialState: ProfileState = {\n\tuserProfile: new Profile(),\n\trivalProfile: new Profile()\n};\n","export interface TranslateState {\n\tid: number;\n\tword: string;\n\twordTranslate: string[];\n\terror: string;\n}\n\nexport const featureKeyTranslate: 'TRANSLATE' = 'TRANSLATE';\n\nexport const initialState: TranslateState = {\n\tid: 0,\n\tword: '',\n\twordTranslate: [],\n\terror: '',\n\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment: any = {\n  production: false,\n  locales: ['en', 'ru'],\n  defaultLocale: 'ru',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}